### YamlMime:ManagedReference
items:
- uid: Animal.Optogenetics
  commentId: T:Animal.Optogenetics
  id: Optogenetics
  parent: Animal
  children:
  - Animal.Optogenetics.#ctor
  - Animal.Optogenetics.#ctor(Animal.Optogenetics)
  - Animal.Optogenetics.Duration
  - Animal.Optogenetics.Frequency
  - Animal.Optogenetics.OptoRatio
  - Animal.Optogenetics.PrintMembers(System.Text.StringBuilder)
  - Animal.Optogenetics.Process
  - Animal.Optogenetics.Process``1(System.IObservable{``0})
  - Animal.Optogenetics.PulseDuration
  - Animal.Optogenetics.RampTime
  - Animal.Optogenetics.ToString
  - Animal.Optogenetics.UseOpto
  - Animal.Optogenetics.UsePulses
  - Animal.Optogenetics.UseRt
  - Animal.Optogenetics.Voltage
  langs:
  - csharp
  - vb
  name: Optogenetics
  nameWithType: Optogenetics
  fullName: Animal.Optogenetics
  type: Class
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Optogenetics
    path: ../src/Extensions/Animal.cs
    startLine: 103
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: >-
      [Combinator]

      [WorkflowElementCategory(ElementCategory.Source)]

      public class Optogenetics
    content.vb: >-
      <Combinator>

      <WorkflowElementCategory(ElementCategory.Source)>

      Public Class Optogenetics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Bonsai.CombinatorAttribute
    ctor: Bonsai.CombinatorAttribute.#ctor
    arguments: []
  - type: Bonsai.WorkflowElementCategoryAttribute
    ctor: Bonsai.WorkflowElementCategoryAttribute.#ctor(Bonsai.ElementCategory)
    arguments:
    - type: Bonsai.ElementCategory
      value: 0
- uid: Animal.Optogenetics.#ctor
  commentId: M:Animal.Optogenetics.#ctor
  id: '#ctor'
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: Optogenetics()
  nameWithType: Optogenetics.Optogenetics()
  fullName: Animal.Optogenetics.Optogenetics()
  type: Constructor
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: .ctor
    path: ../src/Extensions/Animal.cs
    startLine: 127
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: public Optogenetics()
    content.vb: Public Sub New()
  overload: Animal.Optogenetics.#ctor*
  nameWithType.vb: Optogenetics.New()
  fullName.vb: Animal.Optogenetics.New()
  name.vb: New()
- uid: Animal.Optogenetics.#ctor(Animal.Optogenetics)
  commentId: M:Animal.Optogenetics.#ctor(Animal.Optogenetics)
  id: '#ctor(Animal.Optogenetics)'
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: Optogenetics(Optogenetics)
  nameWithType: Optogenetics.Optogenetics(Optogenetics)
  fullName: Animal.Optogenetics.Optogenetics(Animal.Optogenetics)
  type: Constructor
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: .ctor
    path: ../src/Extensions/Animal.cs
    startLine: 131
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: protected Optogenetics(Optogenetics other)
    parameters:
    - id: other
      type: Animal.Optogenetics
    content.vb: Protected Sub New(other As Optogenetics)
  overload: Animal.Optogenetics.#ctor*
  nameWithType.vb: Optogenetics.New(Optogenetics)
  fullName.vb: Animal.Optogenetics.New(Animal.Optogenetics)
  name.vb: New(Optogenetics)
- uid: Animal.Optogenetics.UseOpto
  commentId: P:Animal.Optogenetics.UseOpto
  id: UseOpto
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: UseOpto
  nameWithType: Optogenetics.UseOpto
  fullName: Animal.Optogenetics.UseOpto
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: UseOpto
    path: ../src/Extensions/Animal.cs
    startLine: 147
  assemblies:
  - Extensions
  namespace: Animal
  summary: Indicates whether optogenetics is used or not.
  example: []
  syntax:
    content: >-
      [JsonProperty("use_opto", Required = Required.Always)]

      [YamlMember(Alias = "use_opto")]

      public bool UseOpto { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("use_opto", Required:=Required.Always)>

      <YamlMember(Alias:="use_opto")>

      Public Property UseOpto As Boolean
  overload: Animal.Optogenetics.UseOpto*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use_opto
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: use_opto
- uid: Animal.Optogenetics.Voltage
  commentId: P:Animal.Optogenetics.Voltage
  id: Voltage
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: Voltage
  nameWithType: Optogenetics.Voltage
  fullName: Animal.Optogenetics.Voltage
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Voltage
    path: ../src/Extensions/Animal.cs
    startLine: 165
  assemblies:
  - Extensions
  namespace: Animal
  summary: The voltage to use in the TTL signal.
  example: []
  syntax:
    content: >-
      [JsonProperty("voltage", Required = Required.Always)]

      [YamlMember(Alias = "voltage")]

      public int Voltage { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("voltage", Required:=Required.Always)>

      <YamlMember(Alias:="voltage")>

      Public Property Voltage As Integer
  overload: Animal.Optogenetics.Voltage*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: voltage
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: voltage
- uid: Animal.Optogenetics.Duration
  commentId: P:Animal.Optogenetics.Duration
  id: Duration
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: Optogenetics.Duration
  fullName: Animal.Optogenetics.Duration
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Duration
    path: ../src/Extensions/Animal.cs
    startLine: 183
  assemblies:
  - Extensions
  namespace: Animal
  summary: The duration of the optogenetics stimulation/inhibition protocol (s).
  example: []
  syntax:
    content: >-
      [JsonProperty("duration", Required = Required.Always)]

      [YamlMember(Alias = "duration")]

      public double Duration { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("duration", Required:=Required.Always)>

      <YamlMember(Alias:="duration")>

      Public Property Duration As Double
  overload: Animal.Optogenetics.Duration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: duration
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: duration
- uid: Animal.Optogenetics.OptoRatio
  commentId: P:Animal.Optogenetics.OptoRatio
  id: OptoRatio
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: OptoRatio
  nameWithType: Optogenetics.OptoRatio
  fullName: Animal.Optogenetics.OptoRatio
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: OptoRatio
    path: ../src/Extensions/Animal.cs
    startLine: 201
  assemblies:
  - Extensions
  namespace: Animal
  summary: The ratio of optogenetics trials.
  example: []
  syntax:
    content: >-
      [JsonProperty("opto_ratio", Required = Required.Always)]

      [YamlMember(Alias = "opto_ratio")]

      public double OptoRatio { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("opto_ratio", Required:=Required.Always)>

      <YamlMember(Alias:="opto_ratio")>

      Public Property OptoRatio As Double
  overload: Animal.Optogenetics.OptoRatio*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: opto_ratio
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: opto_ratio
- uid: Animal.Optogenetics.UsePulses
  commentId: P:Animal.Optogenetics.UsePulses
  id: UsePulses
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: UsePulses
  nameWithType: Optogenetics.UsePulses
  fullName: Animal.Optogenetics.UsePulses
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: UsePulses
    path: ../src/Extensions/Animal.cs
    startLine: 219
  assemblies:
  - Extensions
  namespace: Animal
  summary: Indicates whether the optogenetics protocol uses pulses of light (true) or a continuous emission (false).
  example: []
  syntax:
    content: >-
      [JsonProperty("use_pulses", Required = Required.Always)]

      [YamlMember(Alias = "use_pulses")]

      public bool UsePulses { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("use_pulses", Required:=Required.Always)>

      <YamlMember(Alias:="use_pulses")>

      Public Property UsePulses As Boolean
  overload: Animal.Optogenetics.UsePulses*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use_pulses
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: use_pulses
- uid: Animal.Optogenetics.RampTime
  commentId: P:Animal.Optogenetics.RampTime
  id: RampTime
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: RampTime
  nameWithType: Optogenetics.RampTime
  fullName: Animal.Optogenetics.RampTime
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: RampTime
    path: ../src/Extensions/Animal.cs
    startLine: 238
  assemblies:
  - Extensions
  namespace: Animal
  summary: The duration of the ramp of the optogenetics protocol (ms). It only works when use_pulses is false.
  example: []
  syntax:
    content: >-
      [JsonProperty("ramp_time", Required = Required.Always)]

      [YamlMember(Alias = "ramp_time")]

      public double RampTime { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("ramp_time", Required:=Required.Always)>

      <YamlMember(Alias:="ramp_time")>

      Public Property RampTime As Double
  overload: Animal.Optogenetics.RampTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ramp_time
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: ramp_time
- uid: Animal.Optogenetics.Frequency
  commentId: P:Animal.Optogenetics.Frequency
  id: Frequency
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: Frequency
  nameWithType: Optogenetics.Frequency
  fullName: Animal.Optogenetics.Frequency
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Frequency
    path: ../src/Extensions/Animal.cs
    startLine: 257
  assemblies:
  - Extensions
  namespace: Animal
  summary: The frequency of the pulses (Hz). It only works when use_pulses is true.
  example: []
  syntax:
    content: >-
      [JsonProperty("frequency", Required = Required.Always)]

      [YamlMember(Alias = "frequency")]

      public double Frequency { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("frequency", Required:=Required.Always)>

      <YamlMember(Alias:="frequency")>

      Public Property Frequency As Double
  overload: Animal.Optogenetics.Frequency*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: frequency
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: frequency
- uid: Animal.Optogenetics.PulseDuration
  commentId: P:Animal.Optogenetics.PulseDuration
  id: PulseDuration
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: PulseDuration
  nameWithType: Optogenetics.PulseDuration
  fullName: Animal.Optogenetics.PulseDuration
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: PulseDuration
    path: ../src/Extensions/Animal.cs
    startLine: 275
  assemblies:
  - Extensions
  namespace: Animal
  summary: The duration of a single pulse (ms). It only works when use_pulses is true.
  example: []
  syntax:
    content: >-
      [JsonProperty("pulse_duration", Required = Required.Always)]

      [YamlMember(Alias = "pulse_duration")]

      public double PulseDuration { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("pulse_duration", Required:=Required.Always)>

      <YamlMember(Alias:="pulse_duration")>

      Public Property PulseDuration As Double
  overload: Animal.Optogenetics.PulseDuration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: pulse_duration
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: pulse_duration
- uid: Animal.Optogenetics.UseRt
  commentId: P:Animal.Optogenetics.UseRt
  id: UseRt
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: UseRt
  nameWithType: Optogenetics.UseRt
  fullName: Animal.Optogenetics.UseRt
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: UseRt
    path: ../src/Extensions/Animal.cs
    startLine: 293
  assemblies:
  - Extensions
  namespace: Animal
  summary: Indicates whether the optogenetics stimulation/inhibition should stop when the animal leaves the poke (true) or not (false).
  example: []
  syntax:
    content: >-
      [JsonProperty("use_rt", Required = Required.Always)]

      [YamlMember(Alias = "use_rt")]

      public bool UseRt { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("use_rt", Required:=Required.Always)>

      <YamlMember(Alias:="use_rt")>

      Public Property UseRt As Boolean
  overload: Animal.Optogenetics.UseRt*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use_rt
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: use_rt
- uid: Animal.Optogenetics.Process
  commentId: M:Animal.Optogenetics.Process
  id: Process
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: Process()
  nameWithType: Optogenetics.Process()
  fullName: Animal.Optogenetics.Process()
  type: Method
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Process
    path: ../src/Extensions/Animal.cs
    startLine: 309
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: public IObservable<Optogenetics> Process()
    return:
      type: System.IObservable{Animal.Optogenetics}
    content.vb: Public Function Process() As IObservable(Of Optogenetics)
  overload: Animal.Optogenetics.Process*
- uid: Animal.Optogenetics.Process``1(System.IObservable{``0})
  commentId: M:Animal.Optogenetics.Process``1(System.IObservable{``0})
  id: Process``1(System.IObservable{``0})
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: Process<TSource>(IObservable<TSource>)
  nameWithType: Optogenetics.Process<TSource>(IObservable<TSource>)
  fullName: Animal.Optogenetics.Process<TSource>(System.IObservable<TSource>)
  type: Method
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Process
    path: ../src/Extensions/Animal.cs
    startLine: 314
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: public IObservable<Optogenetics> Process<TSource>(IObservable<TSource> source)
    parameters:
    - id: source
      type: System.IObservable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.IObservable{Animal.Optogenetics}
    content.vb: Public Function Process(Of TSource)(source As IObservable(Of TSource)) As IObservable(Of Optogenetics)
  overload: Animal.Optogenetics.Process*
  nameWithType.vb: Optogenetics.Process(Of TSource)(IObservable(Of TSource))
  fullName.vb: Animal.Optogenetics.Process(Of TSource)(System.IObservable(Of TSource))
  name.vb: Process(Of TSource)(IObservable(Of TSource))
- uid: Animal.Optogenetics.PrintMembers(System.Text.StringBuilder)
  commentId: M:Animal.Optogenetics.PrintMembers(System.Text.StringBuilder)
  id: PrintMembers(System.Text.StringBuilder)
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: PrintMembers(StringBuilder)
  nameWithType: Optogenetics.PrintMembers(StringBuilder)
  fullName: Animal.Optogenetics.PrintMembers(System.Text.StringBuilder)
  type: Method
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: PrintMembers
    path: ../src/Extensions/Animal.cs
    startLine: 319
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: protected virtual bool PrintMembers(StringBuilder stringBuilder)
    parameters:
    - id: stringBuilder
      type: System.Text.StringBuilder
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function PrintMembers(stringBuilder As StringBuilder) As Boolean
  overload: Animal.Optogenetics.PrintMembers*
- uid: Animal.Optogenetics.ToString
  commentId: M:Animal.Optogenetics.ToString
  id: ToString
  parent: Animal.Optogenetics
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Optogenetics.ToString()
  fullName: Animal.Optogenetics.ToString()
  type: Method
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: ToString
    path: ../src/Extensions/Animal.cs
    startLine: 333
  assemblies:
  - Extensions
  namespace: Animal
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Animal.Optogenetics.ToString*
references:
- uid: Animal
  commentId: N:Animal
  href: Animal.html
  name: Animal
  nameWithType: Animal
  fullName: Animal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Animal.Optogenetics.#ctor*
  commentId: Overload:Animal.Optogenetics.#ctor
  href: Animal.Optogenetics.html#Animal_Optogenetics__ctor
  name: Optogenetics
  nameWithType: Optogenetics.Optogenetics
  fullName: Animal.Optogenetics.Optogenetics
  nameWithType.vb: Optogenetics.New
  fullName.vb: Animal.Optogenetics.New
  name.vb: New
- uid: Animal.Optogenetics
  commentId: T:Animal.Optogenetics
  parent: Animal
  href: Animal.Optogenetics.html
  name: Optogenetics
  nameWithType: Optogenetics
  fullName: Animal.Optogenetics
- uid: Animal.Optogenetics.UseOpto*
  commentId: Overload:Animal.Optogenetics.UseOpto
  href: Animal.Optogenetics.html#Animal_Optogenetics_UseOpto
  name: UseOpto
  nameWithType: Optogenetics.UseOpto
  fullName: Animal.Optogenetics.UseOpto
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Animal.Optogenetics.Voltage*
  commentId: Overload:Animal.Optogenetics.Voltage
  href: Animal.Optogenetics.html#Animal_Optogenetics_Voltage
  name: Voltage
  nameWithType: Optogenetics.Voltage
  fullName: Animal.Optogenetics.Voltage
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Animal.Optogenetics.Duration*
  commentId: Overload:Animal.Optogenetics.Duration
  href: Animal.Optogenetics.html#Animal_Optogenetics_Duration
  name: Duration
  nameWithType: Optogenetics.Duration
  fullName: Animal.Optogenetics.Duration
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Animal.Optogenetics.OptoRatio*
  commentId: Overload:Animal.Optogenetics.OptoRatio
  href: Animal.Optogenetics.html#Animal_Optogenetics_OptoRatio
  name: OptoRatio
  nameWithType: Optogenetics.OptoRatio
  fullName: Animal.Optogenetics.OptoRatio
- uid: Animal.Optogenetics.UsePulses*
  commentId: Overload:Animal.Optogenetics.UsePulses
  href: Animal.Optogenetics.html#Animal_Optogenetics_UsePulses
  name: UsePulses
  nameWithType: Optogenetics.UsePulses
  fullName: Animal.Optogenetics.UsePulses
- uid: Animal.Optogenetics.RampTime*
  commentId: Overload:Animal.Optogenetics.RampTime
  href: Animal.Optogenetics.html#Animal_Optogenetics_RampTime
  name: RampTime
  nameWithType: Optogenetics.RampTime
  fullName: Animal.Optogenetics.RampTime
- uid: Animal.Optogenetics.Frequency*
  commentId: Overload:Animal.Optogenetics.Frequency
  href: Animal.Optogenetics.html#Animal_Optogenetics_Frequency
  name: Frequency
  nameWithType: Optogenetics.Frequency
  fullName: Animal.Optogenetics.Frequency
- uid: Animal.Optogenetics.PulseDuration*
  commentId: Overload:Animal.Optogenetics.PulseDuration
  href: Animal.Optogenetics.html#Animal_Optogenetics_PulseDuration
  name: PulseDuration
  nameWithType: Optogenetics.PulseDuration
  fullName: Animal.Optogenetics.PulseDuration
- uid: Animal.Optogenetics.UseRt*
  commentId: Overload:Animal.Optogenetics.UseRt
  href: Animal.Optogenetics.html#Animal_Optogenetics_UseRt
  name: UseRt
  nameWithType: Optogenetics.UseRt
  fullName: Animal.Optogenetics.UseRt
- uid: Animal.Optogenetics.Process*
  commentId: Overload:Animal.Optogenetics.Process
  href: Animal.Optogenetics.html#Animal_Optogenetics_Process
  name: Process
  nameWithType: Optogenetics.Process
  fullName: Animal.Optogenetics.Process
- uid: System.IObservable{Animal.Optogenetics}
  commentId: T:System.IObservable{Animal.Optogenetics}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<Optogenetics>
  nameWithType: IObservable<Optogenetics>
  fullName: System.IObservable<Animal.Optogenetics>
  nameWithType.vb: IObservable(Of Optogenetics)
  fullName.vb: System.IObservable(Of Animal.Optogenetics)
  name.vb: IObservable(Of Optogenetics)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - uid: Animal.Optogenetics
    name: Optogenetics
    href: Animal.Optogenetics.html
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Animal.Optogenetics
    name: Optogenetics
    href: Animal.Optogenetics.html
  - name: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IObservable{{TSource}}
  commentId: T:System.IObservable{``0}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<TSource>
  nameWithType: IObservable<TSource>
  fullName: System.IObservable<TSource>
  nameWithType.vb: IObservable(Of TSource)
  fullName.vb: System.IObservable(Of TSource)
  name.vb: IObservable(Of TSource)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: Animal.Optogenetics.PrintMembers*
  commentId: Overload:Animal.Optogenetics.PrintMembers
  href: Animal.Optogenetics.html#Animal_Optogenetics_PrintMembers_System_Text_StringBuilder_
  name: PrintMembers
  nameWithType: Optogenetics.PrintMembers
  fullName: Animal.Optogenetics.PrintMembers
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Animal.Optogenetics.ToString*
  commentId: Overload:Animal.Optogenetics.ToString
  href: Animal.Optogenetics.html#Animal_Optogenetics_ToString
  name: ToString
  nameWithType: Optogenetics.ToString
  fullName: Animal.Optogenetics.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
