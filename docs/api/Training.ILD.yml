### YamlMime:ManagedReference
items:
- uid: Training.ILD
  commentId: T:Training.ILD
  id: ILD
  parent: Training
  children:
  - Training.ILD.#ctor
  - Training.ILD.#ctor(Training.ILD)
  - Training.ILD.LogOrExpBase
  - Training.ILD.NumSteps
  - Training.ILD.PrintMembers(System.Text.StringBuilder)
  - Training.ILD.Process
  - Training.ILD.Process``1(System.IObservable{``0})
  - Training.ILD.SpecialCase
  - Training.ILD.StepSize
  - Training.ILD.ToString
  - Training.ILD.UseLogOrExp
  langs:
  - csharp
  - vb
  name: ILD
  nameWithType: ILD
  fullName: Training.ILD
  type: Class
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: ILD
    path: ../src/Extensions/Training.cs
    startLine: 280
  assemblies:
  - Extensions
  namespace: Training
  syntax:
    content: >-
      [Combinator]

      [WorkflowElementCategory(ElementCategory.Source)]

      public class ILD
    content.vb: >-
      <Combinator>

      <WorkflowElementCategory(ElementCategory.Source)>

      Public Class ILD
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Bonsai.CombinatorAttribute
    ctor: Bonsai.CombinatorAttribute.#ctor
    arguments: []
  - type: Bonsai.WorkflowElementCategoryAttribute
    ctor: Bonsai.WorkflowElementCategoryAttribute.#ctor(Bonsai.ElementCategory)
    arguments:
    - type: Bonsai.ElementCategory
      value: 0
- uid: Training.ILD.#ctor
  commentId: M:Training.ILD.#ctor
  id: '#ctor'
  parent: Training.ILD
  langs:
  - csharp
  - vb
  name: ILD()
  nameWithType: ILD.ILD()
  fullName: Training.ILD.ILD()
  type: Constructor
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: .ctor
    path: ../src/Extensions/Training.cs
    startLine: 296
  assemblies:
  - Extensions
  namespace: Training
  syntax:
    content: public ILD()
    content.vb: Public Sub New()
  overload: Training.ILD.#ctor*
  nameWithType.vb: ILD.New()
  fullName.vb: Training.ILD.New()
  name.vb: New()
- uid: Training.ILD.#ctor(Training.ILD)
  commentId: M:Training.ILD.#ctor(Training.ILD)
  id: '#ctor(Training.ILD)'
  parent: Training.ILD
  langs:
  - csharp
  - vb
  name: ILD(ILD)
  nameWithType: ILD.ILD(ILD)
  fullName: Training.ILD.ILD(Training.ILD)
  type: Constructor
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: .ctor
    path: ../src/Extensions/Training.cs
    startLine: 300
  assemblies:
  - Extensions
  namespace: Training
  syntax:
    content: protected ILD(ILD other)
    parameters:
    - id: other
      type: Training.ILD
    content.vb: Protected Sub New(other As ILD)
  overload: Training.ILD.#ctor*
  nameWithType.vb: ILD.New(ILD)
  fullName.vb: Training.ILD.New(Training.ILD)
  name.vb: New(ILD)
- uid: Training.ILD.SpecialCase
  commentId: P:Training.ILD.SpecialCase
  id: SpecialCase
  parent: Training.ILD
  langs:
  - csharp
  - vb
  name: SpecialCase
  nameWithType: ILD.SpecialCase
  fullName: Training.ILD.SpecialCase
  type: Property
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: SpecialCase
    path: ../src/Extensions/Training.cs
    startLine: 312
  assemblies:
  - Extensions
  namespace: Training
  summary: The special case is when the real ILD value is the nominal ABL and the real ABL value corresponds to half the nominal ABL. For example, if the nominal ABL value is 50 db SPL, one of the speakers will produce a sound of 50 dB SPL and the other one will produce a sound of 0 dB SPL. This parameter indicates whether this special case is used (true) or not (false).
  example: []
  syntax:
    content: >-
      [JsonProperty("special_case", Required = Required.Always)]

      [YamlMember(Alias = "special_case")]

      public bool SpecialCase { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("special_case", Required:=Required.Always)>

      <YamlMember(Alias:="special_case")>

      Public Property SpecialCase As Boolean
  overload: Training.ILD.SpecialCase*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: special_case
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: special_case
- uid: Training.ILD.StepSize
  commentId: P:Training.ILD.StepSize
  id: StepSize
  parent: Training.ILD
  langs:
  - csharp
  - vb
  name: StepSize
  nameWithType: ILD.StepSize
  fullName: Training.ILD.StepSize
  type: Property
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: StepSize
    path: ../src/Extensions/Training.cs
    startLine: 330
  assemblies:
  - Extensions
  namespace: Training
  summary: The separation between two consecutive |ILD| values.
  example: []
  syntax:
    content: >-
      [JsonProperty("step_size", Required = Required.Always)]

      [YamlMember(Alias = "step_size")]

      public double StepSize { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("step_size", Required:=Required.Always)>

      <YamlMember(Alias:="step_size")>

      Public Property StepSize As Double
  overload: Training.ILD.StepSize*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: step_size
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: step_size
- uid: Training.ILD.NumSteps
  commentId: P:Training.ILD.NumSteps
  id: NumSteps
  parent: Training.ILD
  langs:
  - csharp
  - vb
  name: NumSteps
  nameWithType: ILD.NumSteps
  fullName: Training.ILD.NumSteps
  type: Property
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: NumSteps
    path: ../src/Extensions/Training.cs
    startLine: 348
  assemblies:
  - Extensions
  namespace: Training
  summary: The number of |ILD| values. The final array will contain 2 * num_steps elements to account for both the positive and the negative ILD values.
  example: []
  syntax:
    content: >-
      [JsonProperty("num_steps", Required = Required.Always)]

      [YamlMember(Alias = "num_steps")]

      public int NumSteps { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("num_steps", Required:=Required.Always)>

      <YamlMember(Alias:="num_steps")>

      Public Property NumSteps As Integer
  overload: Training.ILD.NumSteps*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: num_steps
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: num_steps
- uid: Training.ILD.UseLogOrExp
  commentId: P:Training.ILD.UseLogOrExp
  id: UseLogOrExp
  parent: Training.ILD
  langs:
  - csharp
  - vb
  name: UseLogOrExp
  nameWithType: ILD.UseLogOrExp
  fullName: Training.ILD.UseLogOrExp
  type: Property
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: UseLogOrExp
    path: ../src/Extensions/Training.cs
    startLine: 367
  assemblies:
  - Extensions
  namespace: Training
  summary: Indicates whether to use logarithmic/exponential steps between consecutive ILD values.
  example: []
  syntax:
    content: >-
      [JsonProperty("use_log_or_exp", Required = Required.Always)]

      [YamlMember(Alias = "use_log_or_exp")]

      public ILDUseLogOrExp UseLogOrExp { get; set; }
    parameters: []
    return:
      type: Training.ILDUseLogOrExp
    content.vb: >-
      <JsonProperty("use_log_or_exp", Required:=Required.Always)>

      <YamlMember(Alias:="use_log_or_exp")>

      Public Property UseLogOrExp As ILDUseLogOrExp
  overload: Training.ILD.UseLogOrExp*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use_log_or_exp
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: use_log_or_exp
- uid: Training.ILD.LogOrExpBase
  commentId: P:Training.ILD.LogOrExpBase
  id: LogOrExpBase
  parent: Training.ILD
  langs:
  - csharp
  - vb
  name: LogOrExpBase
  nameWithType: ILD.LogOrExpBase
  fullName: Training.ILD.LogOrExpBase
  type: Property
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: LogOrExpBase
    path: ../src/Extensions/Training.cs
    startLine: 387
  assemblies:
  - Extensions
  namespace: Training
  summary: The base of the logarithm/exponential.
  example: []
  syntax:
    content: >-
      [JsonProperty("log_or_exp_base", Required = Required.Always)]

      [YamlMember(Alias = "log_or_exp_base")]

      public double LogOrExpBase { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("log_or_exp_base", Required:=Required.Always)>

      <YamlMember(Alias:="log_or_exp_base")>

      Public Property LogOrExpBase As Double
  overload: Training.ILD.LogOrExpBase*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: log_or_exp_base
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: log_or_exp_base
- uid: Training.ILD.Process
  commentId: M:Training.ILD.Process
  id: Process
  parent: Training.ILD
  langs:
  - csharp
  - vb
  name: Process()
  nameWithType: ILD.Process()
  fullName: Training.ILD.Process()
  type: Method
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Process
    path: ../src/Extensions/Training.cs
    startLine: 402
  assemblies:
  - Extensions
  namespace: Training
  syntax:
    content: public IObservable<ILD> Process()
    return:
      type: System.IObservable{Training.ILD}
    content.vb: Public Function Process() As IObservable(Of ILD)
  overload: Training.ILD.Process*
- uid: Training.ILD.Process``1(System.IObservable{``0})
  commentId: M:Training.ILD.Process``1(System.IObservable{``0})
  id: Process``1(System.IObservable{``0})
  parent: Training.ILD
  langs:
  - csharp
  - vb
  name: Process<TSource>(IObservable<TSource>)
  nameWithType: ILD.Process<TSource>(IObservable<TSource>)
  fullName: Training.ILD.Process<TSource>(System.IObservable<TSource>)
  type: Method
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Process
    path: ../src/Extensions/Training.cs
    startLine: 407
  assemblies:
  - Extensions
  namespace: Training
  syntax:
    content: public IObservable<ILD> Process<TSource>(IObservable<TSource> source)
    parameters:
    - id: source
      type: System.IObservable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.IObservable{Training.ILD}
    content.vb: Public Function Process(Of TSource)(source As IObservable(Of TSource)) As IObservable(Of ILD)
  overload: Training.ILD.Process*
  nameWithType.vb: ILD.Process(Of TSource)(IObservable(Of TSource))
  fullName.vb: Training.ILD.Process(Of TSource)(System.IObservable(Of TSource))
  name.vb: Process(Of TSource)(IObservable(Of TSource))
- uid: Training.ILD.PrintMembers(System.Text.StringBuilder)
  commentId: M:Training.ILD.PrintMembers(System.Text.StringBuilder)
  id: PrintMembers(System.Text.StringBuilder)
  parent: Training.ILD
  langs:
  - csharp
  - vb
  name: PrintMembers(StringBuilder)
  nameWithType: ILD.PrintMembers(StringBuilder)
  fullName: Training.ILD.PrintMembers(System.Text.StringBuilder)
  type: Method
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: PrintMembers
    path: ../src/Extensions/Training.cs
    startLine: 412
  assemblies:
  - Extensions
  namespace: Training
  syntax:
    content: protected virtual bool PrintMembers(StringBuilder stringBuilder)
    parameters:
    - id: stringBuilder
      type: System.Text.StringBuilder
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function PrintMembers(stringBuilder As StringBuilder) As Boolean
  overload: Training.ILD.PrintMembers*
- uid: Training.ILD.ToString
  commentId: M:Training.ILD.ToString
  id: ToString
  parent: Training.ILD
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ILD.ToString()
  fullName: Training.ILD.ToString()
  type: Method
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: ToString
    path: ../src/Extensions/Training.cs
    startLine: 422
  assemblies:
  - Extensions
  namespace: Training
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Training.ILD.ToString*
references:
- uid: Training
  commentId: N:Training
  href: Training.html
  name: Training
  nameWithType: Training
  fullName: Training
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Training.ILD.#ctor*
  commentId: Overload:Training.ILD.#ctor
  href: Training.ILD.html#Training_ILD__ctor
  name: ILD
  nameWithType: ILD.ILD
  fullName: Training.ILD.ILD
  nameWithType.vb: ILD.New
  fullName.vb: Training.ILD.New
  name.vb: New
- uid: Training.ILD
  commentId: T:Training.ILD
  parent: Training
  href: Training.ILD.html
  name: ILD
  nameWithType: ILD
  fullName: Training.ILD
- uid: Training.ILD.SpecialCase*
  commentId: Overload:Training.ILD.SpecialCase
  href: Training.ILD.html#Training_ILD_SpecialCase
  name: SpecialCase
  nameWithType: ILD.SpecialCase
  fullName: Training.ILD.SpecialCase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Training.ILD.StepSize*
  commentId: Overload:Training.ILD.StepSize
  href: Training.ILD.html#Training_ILD_StepSize
  name: StepSize
  nameWithType: ILD.StepSize
  fullName: Training.ILD.StepSize
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Training.ILD.NumSteps*
  commentId: Overload:Training.ILD.NumSteps
  href: Training.ILD.html#Training_ILD_NumSteps
  name: NumSteps
  nameWithType: ILD.NumSteps
  fullName: Training.ILD.NumSteps
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Training.ILD.UseLogOrExp*
  commentId: Overload:Training.ILD.UseLogOrExp
  href: Training.ILD.html#Training_ILD_UseLogOrExp
  name: UseLogOrExp
  nameWithType: ILD.UseLogOrExp
  fullName: Training.ILD.UseLogOrExp
- uid: Training.ILDUseLogOrExp
  commentId: T:Training.ILDUseLogOrExp
  parent: Training
  href: Training.ILDUseLogOrExp.html
  name: ILDUseLogOrExp
  nameWithType: ILDUseLogOrExp
  fullName: Training.ILDUseLogOrExp
- uid: Training.ILD.LogOrExpBase*
  commentId: Overload:Training.ILD.LogOrExpBase
  href: Training.ILD.html#Training_ILD_LogOrExpBase
  name: LogOrExpBase
  nameWithType: ILD.LogOrExpBase
  fullName: Training.ILD.LogOrExpBase
- uid: Training.ILD.Process*
  commentId: Overload:Training.ILD.Process
  href: Training.ILD.html#Training_ILD_Process
  name: Process
  nameWithType: ILD.Process
  fullName: Training.ILD.Process
- uid: System.IObservable{Training.ILD}
  commentId: T:System.IObservable{Training.ILD}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<ILD>
  nameWithType: IObservable<ILD>
  fullName: System.IObservable<Training.ILD>
  nameWithType.vb: IObservable(Of ILD)
  fullName.vb: System.IObservable(Of Training.ILD)
  name.vb: IObservable(Of ILD)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - uid: Training.ILD
    name: ILD
    href: Training.ILD.html
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Training.ILD
    name: ILD
    href: Training.ILD.html
  - name: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IObservable{{TSource}}
  commentId: T:System.IObservable{``0}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<TSource>
  nameWithType: IObservable<TSource>
  fullName: System.IObservable<TSource>
  nameWithType.vb: IObservable(Of TSource)
  fullName.vb: System.IObservable(Of TSource)
  name.vb: IObservable(Of TSource)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: Training.ILD.PrintMembers*
  commentId: Overload:Training.ILD.PrintMembers
  href: Training.ILD.html#Training_ILD_PrintMembers_System_Text_StringBuilder_
  name: PrintMembers
  nameWithType: ILD.PrintMembers
  fullName: Training.ILD.PrintMembers
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Training.ILD.ToString*
  commentId: Overload:Training.ILD.ToString
  href: Training.ILD.html#Training_ILD_ToString
  name: ToString
  nameWithType: ILD.ToString
  fullName: Training.ILD.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
