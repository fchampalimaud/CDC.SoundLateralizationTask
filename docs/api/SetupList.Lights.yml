### YamlMime:ManagedReference
items:
- uid: SetupList.Lights
  commentId: T:SetupList.Lights
  id: Lights
  parent: SetupList
  children:
  - SetupList.Lights.#ctor
  - SetupList.Lights.#ctor(SetupList.Lights)
  - SetupList.Lights.BoxDutyCycle
  - SetupList.Lights.BoxPeriod
  - SetupList.Lights.FixationLight
  - SetupList.Lights.ItiLight
  - SetupList.Lights.PenaltyLight
  - SetupList.Lights.PokeDutyCycle
  - SetupList.Lights.PokeLight
  - SetupList.Lights.PokePeriod
  - SetupList.Lights.PrintMembers(System.Text.StringBuilder)
  - SetupList.Lights.Process
  - SetupList.Lights.Process``1(System.IObservable{``0})
  - SetupList.Lights.ToString
  langs:
  - csharp
  - vb
  name: Lights
  nameWithType: Lights
  fullName: SetupList.Lights
  type: Class
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Lights
    path: ../src/Extensions/SetupList.cs
    startLine: 11
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: >-
      [Combinator]

      [WorkflowElementCategory(ElementCategory.Source)]

      public class Lights
    content.vb: >-
      <Combinator>

      <WorkflowElementCategory(ElementCategory.Source)>

      Public Class Lights
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Bonsai.CombinatorAttribute
    ctor: Bonsai.CombinatorAttribute.#ctor
    arguments: []
  - type: Bonsai.WorkflowElementCategoryAttribute
    ctor: Bonsai.WorkflowElementCategoryAttribute.#ctor(Bonsai.ElementCategory)
    arguments:
    - type: Bonsai.ElementCategory
      value: 0
- uid: SetupList.Lights.#ctor
  commentId: M:SetupList.Lights.#ctor
  id: '#ctor'
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: Lights()
  nameWithType: Lights.Lights()
  fullName: SetupList.Lights.Lights()
  type: Constructor
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: .ctor
    path: ../src/Extensions/SetupList.cs
    startLine: 33
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: public Lights()
    content.vb: Public Sub New()
  overload: SetupList.Lights.#ctor*
  nameWithType.vb: Lights.New()
  fullName.vb: SetupList.Lights.New()
  name.vb: New()
- uid: SetupList.Lights.#ctor(SetupList.Lights)
  commentId: M:SetupList.Lights.#ctor(SetupList.Lights)
  id: '#ctor(SetupList.Lights)'
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: Lights(Lights)
  nameWithType: Lights.Lights(Lights)
  fullName: SetupList.Lights.Lights(SetupList.Lights)
  type: Constructor
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: .ctor
    path: ../src/Extensions/SetupList.cs
    startLine: 37
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: protected Lights(Lights other)
    parameters:
    - id: other
      type: SetupList.Lights
    content.vb: Protected Sub New(other As Lights)
  overload: SetupList.Lights.#ctor*
  nameWithType.vb: Lights.New(Lights)
  fullName.vb: SetupList.Lights.New(SetupList.Lights)
  name.vb: New(Lights)
- uid: SetupList.Lights.BoxPeriod
  commentId: P:SetupList.Lights.BoxPeriod
  id: BoxPeriod
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: BoxPeriod
  nameWithType: Lights.BoxPeriod
  fullName: SetupList.Lights.BoxPeriod
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: BoxPeriod
    path: ../src/Extensions/SetupList.cs
    startLine: 52
  assemblies:
  - Extensions
  namespace: SetupList
  summary: The period of the blinking of the box LED (ms).
  example: []
  syntax:
    content: >-
      [JsonProperty("box_period", Required = Required.Always)]

      [YamlMember(Alias = "box_period")]

      public double BoxPeriod { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("box_period", Required:=Required.Always)>

      <YamlMember(Alias:="box_period")>

      Public Property BoxPeriod As Double
  overload: SetupList.Lights.BoxPeriod*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: box_period
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: box_period
- uid: SetupList.Lights.BoxDutyCycle
  commentId: P:SetupList.Lights.BoxDutyCycle
  id: BoxDutyCycle
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: BoxDutyCycle
  nameWithType: Lights.BoxDutyCycle
  fullName: SetupList.Lights.BoxDutyCycle
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: BoxDutyCycle
    path: ../src/Extensions/SetupList.cs
    startLine: 70
  assemblies:
  - Extensions
  namespace: SetupList
  summary: The value representing the proportion of time the LED is on when the box LED is blinking. If it's 0 it means that the LED is always off, if it's 1 it means the LED is always on and, for example, if it's 0.5 it means that the LED is on half of the time and off for the remaining half.
  example: []
  syntax:
    content: >-
      [JsonProperty("box_duty_cycle", Required = Required.Always)]

      [YamlMember(Alias = "box_duty_cycle")]

      public double BoxDutyCycle { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("box_duty_cycle", Required:=Required.Always)>

      <YamlMember(Alias:="box_duty_cycle")>

      Public Property BoxDutyCycle As Double
  overload: SetupList.Lights.BoxDutyCycle*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: box_duty_cycle
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: box_duty_cycle
- uid: SetupList.Lights.PokePeriod
  commentId: P:SetupList.Lights.PokePeriod
  id: PokePeriod
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: PokePeriod
  nameWithType: Lights.PokePeriod
  fullName: SetupList.Lights.PokePeriod
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: PokePeriod
    path: ../src/Extensions/SetupList.cs
    startLine: 88
  assemblies:
  - Extensions
  namespace: SetupList
  summary: The period of the blinking of the central poke LED (ms).
  example: []
  syntax:
    content: >-
      [JsonProperty("poke_period", Required = Required.Always)]

      [YamlMember(Alias = "poke_period")]

      public double PokePeriod { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("poke_period", Required:=Required.Always)>

      <YamlMember(Alias:="poke_period")>

      Public Property PokePeriod As Double
  overload: SetupList.Lights.PokePeriod*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: poke_period
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: poke_period
- uid: SetupList.Lights.PokeDutyCycle
  commentId: P:SetupList.Lights.PokeDutyCycle
  id: PokeDutyCycle
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: PokeDutyCycle
  nameWithType: Lights.PokeDutyCycle
  fullName: SetupList.Lights.PokeDutyCycle
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: PokeDutyCycle
    path: ../src/Extensions/SetupList.cs
    startLine: 106
  assemblies:
  - Extensions
  namespace: SetupList
  summary: The value representing the proportion of time the LED is on when the central poke LED is blinking. If it's 0 it means that the LED is always off, if it's 1 it means the LED is always on and, for example, if it's 0.5 it means that the LED is on half of the time and off for the remaining half.
  example: []
  syntax:
    content: >-
      [JsonProperty("poke_duty_cycle", Required = Required.Always)]

      [YamlMember(Alias = "poke_duty_cycle")]

      public double PokeDutyCycle { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("poke_duty_cycle", Required:=Required.Always)>

      <YamlMember(Alias:="poke_duty_cycle")>

      Public Property PokeDutyCycle As Double
  overload: SetupList.Lights.PokeDutyCycle*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: poke_duty_cycle
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: poke_duty_cycle
- uid: SetupList.Lights.ItiLight
  commentId: P:SetupList.Lights.ItiLight
  id: ItiLight
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: ItiLight
  nameWithType: Lights.ItiLight
  fullName: SetupList.Lights.ItiLight
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: ItiLight
    path: ../src/Extensions/SetupList.cs
    startLine: 124
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Indicates whether the box LED should turn of when the new trial is ready (true) or not (false).
  example: []
  syntax:
    content: >-
      [JsonProperty("iti_light", Required = Required.Always)]

      [YamlMember(Alias = "iti_light")]

      public bool ItiLight { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("iti_light", Required:=Required.Always)>

      <YamlMember(Alias:="iti_light")>

      Public Property ItiLight As Boolean
  overload: SetupList.Lights.ItiLight*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: iti_light
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: iti_light
- uid: SetupList.Lights.PokeLight
  commentId: P:SetupList.Lights.PokeLight
  id: PokeLight
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: PokeLight
  nameWithType: Lights.PokeLight
  fullName: SetupList.Lights.PokeLight
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: PokeLight
    path: ../src/Extensions/SetupList.cs
    startLine: 143
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Indicates whether the central poke LED should turn of when the new trial is ready (true) or not (false).
  example: []
  syntax:
    content: >-
      [JsonProperty("poke_light", Required = Required.Always)]

      [YamlMember(Alias = "poke_light")]

      public bool PokeLight { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("poke_light", Required:=Required.Always)>

      <YamlMember(Alias:="poke_light")>

      Public Property PokeLight As Boolean
  overload: SetupList.Lights.PokeLight*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: poke_light
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: poke_light
- uid: SetupList.Lights.FixationLight
  commentId: P:SetupList.Lights.FixationLight
  id: FixationLight
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: FixationLight
  nameWithType: Lights.FixationLight
  fullName: SetupList.Lights.FixationLight
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: FixationLight
    path: ../src/Extensions/SetupList.cs
    startLine: 162
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Indicates whether the central poke LED should blink during fixation time (true) or not (false).
  example: []
  syntax:
    content: >-
      [JsonProperty("fixation_light", Required = Required.Always)]

      [YamlMember(Alias = "fixation_light")]

      public bool FixationLight { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("fixation_light", Required:=Required.Always)>

      <YamlMember(Alias:="fixation_light")>

      Public Property FixationLight As Boolean
  overload: SetupList.Lights.FixationLight*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fixation_light
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: fixation_light
- uid: SetupList.Lights.PenaltyLight
  commentId: P:SetupList.Lights.PenaltyLight
  id: PenaltyLight
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: PenaltyLight
  nameWithType: Lights.PenaltyLight
  fullName: SetupList.Lights.PenaltyLight
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: PenaltyLight
    path: ../src/Extensions/SetupList.cs
    startLine: 181
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Indicates whether the box LED should blink during penalty times (true) or not (false).
  example: []
  syntax:
    content: >-
      [JsonProperty("penalty_light", Required = Required.Always)]

      [YamlMember(Alias = "penalty_light")]

      public bool PenaltyLight { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("penalty_light", Required:=Required.Always)>

      <YamlMember(Alias:="penalty_light")>

      Public Property PenaltyLight As Boolean
  overload: SetupList.Lights.PenaltyLight*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: penalty_light
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: penalty_light
- uid: SetupList.Lights.Process
  commentId: M:SetupList.Lights.Process
  id: Process
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: Process()
  nameWithType: Lights.Process()
  fullName: SetupList.Lights.Process()
  type: Method
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Process
    path: ../src/Extensions/SetupList.cs
    startLine: 197
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: public IObservable<Lights> Process()
    return:
      type: System.IObservable{SetupList.Lights}
    content.vb: Public Function Process() As IObservable(Of Lights)
  overload: SetupList.Lights.Process*
- uid: SetupList.Lights.Process``1(System.IObservable{``0})
  commentId: M:SetupList.Lights.Process``1(System.IObservable{``0})
  id: Process``1(System.IObservable{``0})
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: Process<TSource>(IObservable<TSource>)
  nameWithType: Lights.Process<TSource>(IObservable<TSource>)
  fullName: SetupList.Lights.Process<TSource>(System.IObservable<TSource>)
  type: Method
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Process
    path: ../src/Extensions/SetupList.cs
    startLine: 202
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: public IObservable<Lights> Process<TSource>(IObservable<TSource> source)
    parameters:
    - id: source
      type: System.IObservable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.IObservable{SetupList.Lights}
    content.vb: Public Function Process(Of TSource)(source As IObservable(Of TSource)) As IObservable(Of Lights)
  overload: SetupList.Lights.Process*
  nameWithType.vb: Lights.Process(Of TSource)(IObservable(Of TSource))
  fullName.vb: SetupList.Lights.Process(Of TSource)(System.IObservable(Of TSource))
  name.vb: Process(Of TSource)(IObservable(Of TSource))
- uid: SetupList.Lights.PrintMembers(System.Text.StringBuilder)
  commentId: M:SetupList.Lights.PrintMembers(System.Text.StringBuilder)
  id: PrintMembers(System.Text.StringBuilder)
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: PrintMembers(StringBuilder)
  nameWithType: Lights.PrintMembers(StringBuilder)
  fullName: SetupList.Lights.PrintMembers(System.Text.StringBuilder)
  type: Method
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: PrintMembers
    path: ../src/Extensions/SetupList.cs
    startLine: 207
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: protected virtual bool PrintMembers(StringBuilder stringBuilder)
    parameters:
    - id: stringBuilder
      type: System.Text.StringBuilder
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function PrintMembers(stringBuilder As StringBuilder) As Boolean
  overload: SetupList.Lights.PrintMembers*
- uid: SetupList.Lights.ToString
  commentId: M:SetupList.Lights.ToString
  id: ToString
  parent: SetupList.Lights
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Lights.ToString()
  fullName: SetupList.Lights.ToString()
  type: Method
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: ToString
    path: ../src/Extensions/SetupList.cs
    startLine: 220
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SetupList.Lights.ToString*
references:
- uid: SetupList
  commentId: N:SetupList
  href: SetupList.html
  name: SetupList
  nameWithType: SetupList
  fullName: SetupList
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SetupList.Lights.#ctor*
  commentId: Overload:SetupList.Lights.#ctor
  href: SetupList.Lights.html#SetupList_Lights__ctor
  name: Lights
  nameWithType: Lights.Lights
  fullName: SetupList.Lights.Lights
  nameWithType.vb: Lights.New
  fullName.vb: SetupList.Lights.New
  name.vb: New
- uid: SetupList.Lights
  commentId: T:SetupList.Lights
  parent: SetupList
  href: SetupList.Lights.html
  name: Lights
  nameWithType: Lights
  fullName: SetupList.Lights
- uid: SetupList.Lights.BoxPeriod*
  commentId: Overload:SetupList.Lights.BoxPeriod
  href: SetupList.Lights.html#SetupList_Lights_BoxPeriod
  name: BoxPeriod
  nameWithType: Lights.BoxPeriod
  fullName: SetupList.Lights.BoxPeriod
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SetupList.Lights.BoxDutyCycle*
  commentId: Overload:SetupList.Lights.BoxDutyCycle
  href: SetupList.Lights.html#SetupList_Lights_BoxDutyCycle
  name: BoxDutyCycle
  nameWithType: Lights.BoxDutyCycle
  fullName: SetupList.Lights.BoxDutyCycle
- uid: SetupList.Lights.PokePeriod*
  commentId: Overload:SetupList.Lights.PokePeriod
  href: SetupList.Lights.html#SetupList_Lights_PokePeriod
  name: PokePeriod
  nameWithType: Lights.PokePeriod
  fullName: SetupList.Lights.PokePeriod
- uid: SetupList.Lights.PokeDutyCycle*
  commentId: Overload:SetupList.Lights.PokeDutyCycle
  href: SetupList.Lights.html#SetupList_Lights_PokeDutyCycle
  name: PokeDutyCycle
  nameWithType: Lights.PokeDutyCycle
  fullName: SetupList.Lights.PokeDutyCycle
- uid: SetupList.Lights.ItiLight*
  commentId: Overload:SetupList.Lights.ItiLight
  href: SetupList.Lights.html#SetupList_Lights_ItiLight
  name: ItiLight
  nameWithType: Lights.ItiLight
  fullName: SetupList.Lights.ItiLight
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SetupList.Lights.PokeLight*
  commentId: Overload:SetupList.Lights.PokeLight
  href: SetupList.Lights.html#SetupList_Lights_PokeLight
  name: PokeLight
  nameWithType: Lights.PokeLight
  fullName: SetupList.Lights.PokeLight
- uid: SetupList.Lights.FixationLight*
  commentId: Overload:SetupList.Lights.FixationLight
  href: SetupList.Lights.html#SetupList_Lights_FixationLight
  name: FixationLight
  nameWithType: Lights.FixationLight
  fullName: SetupList.Lights.FixationLight
- uid: SetupList.Lights.PenaltyLight*
  commentId: Overload:SetupList.Lights.PenaltyLight
  href: SetupList.Lights.html#SetupList_Lights_PenaltyLight
  name: PenaltyLight
  nameWithType: Lights.PenaltyLight
  fullName: SetupList.Lights.PenaltyLight
- uid: SetupList.Lights.Process*
  commentId: Overload:SetupList.Lights.Process
  href: SetupList.Lights.html#SetupList_Lights_Process
  name: Process
  nameWithType: Lights.Process
  fullName: SetupList.Lights.Process
- uid: System.IObservable{SetupList.Lights}
  commentId: T:System.IObservable{SetupList.Lights}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<Lights>
  nameWithType: IObservable<Lights>
  fullName: System.IObservable<SetupList.Lights>
  nameWithType.vb: IObservable(Of Lights)
  fullName.vb: System.IObservable(Of SetupList.Lights)
  name.vb: IObservable(Of Lights)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - uid: SetupList.Lights
    name: Lights
    href: SetupList.Lights.html
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SetupList.Lights
    name: Lights
    href: SetupList.Lights.html
  - name: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IObservable{{TSource}}
  commentId: T:System.IObservable{``0}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<TSource>
  nameWithType: IObservable<TSource>
  fullName: System.IObservable<TSource>
  nameWithType.vb: IObservable(Of TSource)
  fullName.vb: System.IObservable(Of TSource)
  name.vb: IObservable(Of TSource)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: SetupList.Lights.PrintMembers*
  commentId: Overload:SetupList.Lights.PrintMembers
  href: SetupList.Lights.html#SetupList_Lights_PrintMembers_System_Text_StringBuilder_
  name: PrintMembers
  nameWithType: Lights.PrintMembers
  fullName: SetupList.Lights.PrintMembers
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SetupList.Lights.ToString*
  commentId: Overload:SetupList.Lights.ToString
  href: SetupList.Lights.html#SetupList_Lights_ToString
  name: ToString
  nameWithType: Lights.ToString
  fullName: SetupList.Lights.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
