### YamlMime:ManagedReference
items:
- uid: Animal.Animal
  commentId: T:Animal.Animal
  id: Animal
  parent: Animal
  children:
  - Animal.Animal.#ctor
  - Animal.Animal.#ctor(Animal.Animal)
  - Animal.Animal.AnimalId
  - Animal.Animal.AutobiasCorrection
  - Animal.Animal.BaseReward
  - Animal.Animal.FixationTime
  - Animal.Animal.LnpTime
  - Animal.Animal.MaxReactionTime
  - Animal.Animal.MinMovementTime
  - Animal.Animal.Optogenetics
  - Animal.Animal.PrintMembers(System.Text.StringBuilder)
  - Animal.Animal.Process
  - Animal.Animal.Process``1(System.IObservable{``0})
  - Animal.Animal.ReactionTime
  - Animal.Animal.Session
  - Animal.Animal.Sound
  - Animal.Animal.ToString
  langs:
  - csharp
  - vb
  name: Animal
  nameWithType: Animal
  fullName: Animal.Animal
  type: Class
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Animal
    path: ../src/Extensions/Animal.cs
    startLine: 793
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: >-
      [Combinator]

      [WorkflowElementCategory(ElementCategory.Source)]

      public class Animal
    content.vb: >-
      <Combinator>

      <WorkflowElementCategory(ElementCategory.Source)>

      Public Class Animal
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Bonsai.CombinatorAttribute
    ctor: Bonsai.CombinatorAttribute.#ctor
    arguments: []
  - type: Bonsai.WorkflowElementCategoryAttribute
    ctor: Bonsai.WorkflowElementCategoryAttribute.#ctor(Bonsai.ElementCategory)
    arguments:
    - type: Bonsai.ElementCategory
      value: 0
- uid: Animal.Animal.#ctor
  commentId: M:Animal.Animal.#ctor
  id: '#ctor'
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: Animal()
  nameWithType: Animal.Animal()
  fullName: Animal.Animal.Animal()
  type: Constructor
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: .ctor
    path: ../src/Extensions/Animal.cs
    startLine: 821
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: public Animal()
    content.vb: Public Sub New()
  overload: Animal.Animal.#ctor*
  nameWithType.vb: Animal.New()
  fullName.vb: Animal.Animal.New()
  name.vb: New()
- uid: Animal.Animal.#ctor(Animal.Animal)
  commentId: M:Animal.Animal.#ctor(Animal.Animal)
  id: '#ctor(Animal.Animal)'
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: Animal(Animal)
  nameWithType: Animal.Animal(Animal)
  fullName: Animal.Animal.Animal(Animal.Animal)
  type: Constructor
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: .ctor
    path: ../src/Extensions/Animal.cs
    startLine: 825
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: protected Animal(Animal other)
    parameters:
    - id: other
      type: Animal.Animal
    content.vb: Protected Sub New(other As Animal)
  overload: Animal.Animal.#ctor*
  nameWithType.vb: Animal.New(Animal)
  fullName.vb: Animal.Animal.New(Animal.Animal)
  name.vb: New(Animal)
- uid: Animal.Animal.AnimalId
  commentId: P:Animal.Animal.AnimalId
  id: AnimalId
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: AnimalId
  nameWithType: Animal.AnimalId
  fullName: Animal.Animal.AnimalId
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: AnimalId
    path: ../src/Extensions/Animal.cs
    startLine: 843
  assemblies:
  - Extensions
  namespace: Animal
  summary: The ID number of the animal.
  example: []
  syntax:
    content: >-
      [JsonProperty("animal_id", Required = Required.Always)]

      [YamlMember(Alias = "animal_id")]

      public int AnimalId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("animal_id", Required:=Required.Always)>

      <YamlMember(Alias:="animal_id")>

      Public Property AnimalId As Integer
  overload: Animal.Animal.AnimalId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: animal_id
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: animal_id
- uid: Animal.Animal.Session
  commentId: P:Animal.Animal.Session
  id: Session
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: Animal.Session
  fullName: Animal.Animal.Session
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Session
    path: ../src/Extensions/Animal.cs
    startLine: 861
  assemblies:
  - Extensions
  namespace: Animal
  summary: Contains the session-related parameters.
  example: []
  syntax:
    content: >-
      [JsonProperty("session", Required = Required.Always)]

      [YamlMember(Alias = "session")]

      public Session Session { get; set; }
    parameters: []
    return:
      type: Animal.Session
    content.vb: >-
      <JsonProperty("session", Required:=Required.Always)>

      <YamlMember(Alias:="session")>

      Public Property Session As Session
  overload: Animal.Animal.Session*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: session
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: session
- uid: Animal.Animal.Sound
  commentId: P:Animal.Animal.Sound
  id: Sound
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: Sound
  nameWithType: Animal.Sound
  fullName: Animal.Animal.Sound
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Sound
    path: ../src/Extensions/Animal.cs
    startLine: 880
  assemblies:
  - Extensions
  namespace: Animal
  summary: Contains the sound-related parameters.
  example: []
  syntax:
    content: >-
      [JsonProperty("sound", Required = Required.Always)]

      [YamlMember(Alias = "sound")]

      public Sound Sound { get; set; }
    parameters: []
    return:
      type: Animal.Sound
    content.vb: >-
      <JsonProperty("sound", Required:=Required.Always)>

      <YamlMember(Alias:="sound")>

      Public Property Sound As Sound
  overload: Animal.Animal.Sound*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sound
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: sound
- uid: Animal.Animal.FixationTime
  commentId: P:Animal.Animal.FixationTime
  id: FixationTime
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: FixationTime
  nameWithType: Animal.FixationTime
  fullName: Animal.Animal.FixationTime
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: FixationTime
    path: ../src/Extensions/Animal.cs
    startLine: 899
  assemblies:
  - Extensions
  namespace: Animal
  summary: Contains parameters related to the fixation time.
  example: []
  syntax:
    content: >-
      [JsonProperty("fixation_time", Required = Required.Always)]

      [YamlMember(Alias = "fixation_time")]

      public FixationTime FixationTime { get; set; }
    parameters: []
    return:
      type: Animal.FixationTime
    content.vb: >-
      <JsonProperty("fixation_time", Required:=Required.Always)>

      <YamlMember(Alias:="fixation_time")>

      Public Property FixationTime As FixationTime
  overload: Animal.Animal.FixationTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fixation_time
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: fixation_time
- uid: Animal.Animal.ReactionTime
  commentId: P:Animal.Animal.ReactionTime
  id: ReactionTime
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: ReactionTime
  nameWithType: Animal.ReactionTime
  fullName: Animal.Animal.ReactionTime
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: ReactionTime
    path: ../src/Extensions/Animal.cs
    startLine: 918
  assemblies:
  - Extensions
  namespace: Animal
  summary: Contains parameters related to the reaction time. The units of each of the parameters is seconds.
  example: []
  syntax:
    content: >-
      [JsonProperty("reaction_time", Required = Required.Always)]

      [YamlMember(Alias = "reaction_time")]

      public TimeConstrains ReactionTime { get; set; }
    parameters: []
    return:
      type: Animal.TimeConstrains
    content.vb: >-
      <JsonProperty("reaction_time", Required:=Required.Always)>

      <YamlMember(Alias:="reaction_time")>

      Public Property ReactionTime As TimeConstrains
  overload: Animal.Animal.ReactionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: reaction_time
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: reaction_time
- uid: Animal.Animal.MaxReactionTime
  commentId: P:Animal.Animal.MaxReactionTime
  id: MaxReactionTime
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: MaxReactionTime
  nameWithType: Animal.MaxReactionTime
  fullName: Animal.Animal.MaxReactionTime
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: MaxReactionTime
    path: ../src/Extensions/Animal.cs
    startLine: 938
  assemblies:
  - Extensions
  namespace: Animal
  summary: The maximum allowed reaction time (s).
  example: []
  syntax:
    content: >-
      [JsonProperty("max_reaction_time", Required = Required.Always)]

      [YamlMember(Alias = "max_reaction_time")]

      public double MaxReactionTime { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("max_reaction_time", Required:=Required.Always)>

      <YamlMember(Alias:="max_reaction_time")>

      Public Property MaxReactionTime As Double
  overload: Animal.Animal.MaxReactionTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: max_reaction_time
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: max_reaction_time
- uid: Animal.Animal.MinMovementTime
  commentId: P:Animal.Animal.MinMovementTime
  id: MinMovementTime
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: MinMovementTime
  nameWithType: Animal.MinMovementTime
  fullName: Animal.Animal.MinMovementTime
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: MinMovementTime
    path: ../src/Extensions/Animal.cs
    startLine: 956
  assemblies:
  - Extensions
  namespace: Animal
  summary: The minimum allowed movement time (s).
  example: []
  syntax:
    content: >-
      [JsonProperty("min_movement_time", Required = Required.Always)]

      [YamlMember(Alias = "min_movement_time")]

      public double MinMovementTime { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("min_movement_time", Required:=Required.Always)>

      <YamlMember(Alias:="min_movement_time")>

      Public Property MinMovementTime As Double
  overload: Animal.Animal.MinMovementTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: min_movement_time
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: min_movement_time
- uid: Animal.Animal.LnpTime
  commentId: P:Animal.Animal.LnpTime
  id: LnpTime
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: LnpTime
  nameWithType: Animal.LnpTime
  fullName: Animal.Animal.LnpTime
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: LnpTime
    path: ../src/Extensions/Animal.cs
    startLine: 974
  assemblies:
  - Extensions
  namespace: Animal
  summary: Contains parameters related to the LNP (Lateral Nose Poke) time. The units of each of the parameters is seconds.
  example: []
  syntax:
    content: >-
      [JsonProperty("lnp_time", Required = Required.Always)]

      [YamlMember(Alias = "lnp_time")]

      public TimeConstrains LnpTime { get; set; }
    parameters: []
    return:
      type: Animal.TimeConstrains
    content.vb: >-
      <JsonProperty("lnp_time", Required:=Required.Always)>

      <YamlMember(Alias:="lnp_time")>

      Public Property LnpTime As TimeConstrains
  overload: Animal.Animal.LnpTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lnp_time
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: lnp_time
- uid: Animal.Animal.BaseReward
  commentId: P:Animal.Animal.BaseReward
  id: BaseReward
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: BaseReward
  nameWithType: Animal.BaseReward
  fullName: Animal.Animal.BaseReward
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: BaseReward
    path: ../src/Extensions/Animal.cs
    startLine: 994
  assemblies:
  - Extensions
  namespace: Animal
  summary: The amount of reward delivered to the animal (uL).
  example: []
  syntax:
    content: >-
      [JsonProperty("base_reward", Required = Required.Always)]

      [YamlMember(Alias = "base_reward")]

      public double BaseReward { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("base_reward", Required:=Required.Always)>

      <YamlMember(Alias:="base_reward")>

      Public Property BaseReward As Double
  overload: Animal.Animal.BaseReward*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: base_reward
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: base_reward
- uid: Animal.Animal.Optogenetics
  commentId: P:Animal.Animal.Optogenetics
  id: Optogenetics
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: Optogenetics
  nameWithType: Animal.Optogenetics
  fullName: Animal.Animal.Optogenetics
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Optogenetics
    path: ../src/Extensions/Animal.cs
    startLine: 1012
  assemblies:
  - Extensions
  namespace: Animal
  summary: Contains the optogenetics-related parameters.
  example: []
  syntax:
    content: >-
      [JsonProperty("optogenetics", Required = Required.Always)]

      [YamlMember(Alias = "optogenetics")]

      public Optogenetics Optogenetics { get; set; }
    parameters: []
    return:
      type: Animal.Optogenetics
    content.vb: >-
      <JsonProperty("optogenetics", Required:=Required.Always)>

      <YamlMember(Alias:="optogenetics")>

      Public Property Optogenetics As Optogenetics
  overload: Animal.Animal.Optogenetics*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: optogenetics
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: optogenetics
- uid: Animal.Animal.AutobiasCorrection
  commentId: P:Animal.Animal.AutobiasCorrection
  id: AutobiasCorrection
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: AutobiasCorrection
  nameWithType: Animal.AutobiasCorrection
  fullName: Animal.Animal.AutobiasCorrection
  type: Property
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: AutobiasCorrection
    path: ../src/Extensions/Animal.cs
    startLine: 1031
  assemblies:
  - Extensions
  namespace: Animal
  summary: Indicates whether autobias correction should be applied or not.
  example: []
  syntax:
    content: >-
      [JsonProperty("autobias_correction", Required = Required.Always)]

      [YamlMember(Alias = "autobias_correction")]

      public bool AutobiasCorrection { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("autobias_correction", Required:=Required.Always)>

      <YamlMember(Alias:="autobias_correction")>

      Public Property AutobiasCorrection As Boolean
  overload: Animal.Animal.AutobiasCorrection*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: autobias_correction
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: autobias_correction
- uid: Animal.Animal.Process
  commentId: M:Animal.Animal.Process
  id: Process
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: Process()
  nameWithType: Animal.Process()
  fullName: Animal.Animal.Process()
  type: Method
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Process
    path: ../src/Extensions/Animal.cs
    startLine: 1046
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: public IObservable<Animal> Process()
    return:
      type: System.IObservable{Animal.Animal}
    content.vb: Public Function Process() As IObservable(Of Animal)
  overload: Animal.Animal.Process*
- uid: Animal.Animal.Process``1(System.IObservable{``0})
  commentId: M:Animal.Animal.Process``1(System.IObservable{``0})
  id: Process``1(System.IObservable{``0})
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: Process<TSource>(IObservable<TSource>)
  nameWithType: Animal.Process<TSource>(IObservable<TSource>)
  fullName: Animal.Animal.Process<TSource>(System.IObservable<TSource>)
  type: Method
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Process
    path: ../src/Extensions/Animal.cs
    startLine: 1051
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: public IObservable<Animal> Process<TSource>(IObservable<TSource> source)
    parameters:
    - id: source
      type: System.IObservable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.IObservable{Animal.Animal}
    content.vb: Public Function Process(Of TSource)(source As IObservable(Of TSource)) As IObservable(Of Animal)
  overload: Animal.Animal.Process*
  nameWithType.vb: Animal.Process(Of TSource)(IObservable(Of TSource))
  fullName.vb: Animal.Animal.Process(Of TSource)(System.IObservable(Of TSource))
  name.vb: Process(Of TSource)(IObservable(Of TSource))
- uid: Animal.Animal.PrintMembers(System.Text.StringBuilder)
  commentId: M:Animal.Animal.PrintMembers(System.Text.StringBuilder)
  id: PrintMembers(System.Text.StringBuilder)
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: PrintMembers(StringBuilder)
  nameWithType: Animal.PrintMembers(StringBuilder)
  fullName: Animal.Animal.PrintMembers(System.Text.StringBuilder)
  type: Method
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: PrintMembers
    path: ../src/Extensions/Animal.cs
    startLine: 1056
  assemblies:
  - Extensions
  namespace: Animal
  syntax:
    content: protected virtual bool PrintMembers(StringBuilder stringBuilder)
    parameters:
    - id: stringBuilder
      type: System.Text.StringBuilder
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function PrintMembers(stringBuilder As StringBuilder) As Boolean
  overload: Animal.Animal.PrintMembers*
- uid: Animal.Animal.ToString
  commentId: M:Animal.Animal.ToString
  id: ToString
  parent: Animal.Animal
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Animal.ToString()
  fullName: Animal.Animal.ToString()
  type: Method
  source:
    remote:
      path: src/Extensions/Animal.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: ToString
    path: ../src/Extensions/Animal.cs
    startLine: 1072
  assemblies:
  - Extensions
  namespace: Animal
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Animal.Animal.ToString*
references:
- uid: Animal
  commentId: N:Animal
  href: Animal.html
  name: Animal
  nameWithType: Animal
  fullName: Animal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Animal.Animal.#ctor*
  commentId: Overload:Animal.Animal.#ctor
  href: Animal.Animal.html#Animal_Animal__ctor
  name: Animal
  nameWithType: Animal.Animal
  fullName: Animal.Animal.Animal
  nameWithType.vb: Animal.New
  fullName.vb: Animal.Animal.New
  name.vb: New
- uid: Animal.Animal
  commentId: T:Animal.Animal
  parent: Animal
  href: Animal.Animal.html
  name: Animal
  nameWithType: Animal
  fullName: Animal.Animal
- uid: Animal.Animal.AnimalId*
  commentId: Overload:Animal.Animal.AnimalId
  href: Animal.Animal.html#Animal_Animal_AnimalId
  name: AnimalId
  nameWithType: Animal.AnimalId
  fullName: Animal.Animal.AnimalId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Animal.Animal.Session*
  commentId: Overload:Animal.Animal.Session
  href: Animal.Animal.html#Animal_Animal_Session
  name: Session
  nameWithType: Animal.Session
  fullName: Animal.Animal.Session
- uid: Animal.Session
  commentId: T:Animal.Session
  parent: Animal
  href: Animal.Session.html
  name: Session
  nameWithType: Session
  fullName: Animal.Session
- uid: Animal.Animal.Sound*
  commentId: Overload:Animal.Animal.Sound
  href: Animal.Animal.html#Animal_Animal_Sound
  name: Sound
  nameWithType: Animal.Sound
  fullName: Animal.Animal.Sound
- uid: Animal.Sound
  commentId: T:Animal.Sound
  parent: Animal
  href: Animal.Sound.html
  name: Sound
  nameWithType: Sound
  fullName: Animal.Sound
- uid: Animal.Animal.FixationTime*
  commentId: Overload:Animal.Animal.FixationTime
  href: Animal.Animal.html#Animal_Animal_FixationTime
  name: FixationTime
  nameWithType: Animal.FixationTime
  fullName: Animal.Animal.FixationTime
- uid: Animal.FixationTime
  commentId: T:Animal.FixationTime
  parent: Animal
  href: Animal.FixationTime.html
  name: FixationTime
  nameWithType: FixationTime
  fullName: Animal.FixationTime
- uid: Animal.Animal.ReactionTime*
  commentId: Overload:Animal.Animal.ReactionTime
  href: Animal.Animal.html#Animal_Animal_ReactionTime
  name: ReactionTime
  nameWithType: Animal.ReactionTime
  fullName: Animal.Animal.ReactionTime
- uid: Animal.TimeConstrains
  commentId: T:Animal.TimeConstrains
  parent: Animal
  href: Animal.TimeConstrains.html
  name: TimeConstrains
  nameWithType: TimeConstrains
  fullName: Animal.TimeConstrains
- uid: Animal.Animal.MaxReactionTime*
  commentId: Overload:Animal.Animal.MaxReactionTime
  href: Animal.Animal.html#Animal_Animal_MaxReactionTime
  name: MaxReactionTime
  nameWithType: Animal.MaxReactionTime
  fullName: Animal.Animal.MaxReactionTime
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Animal.Animal.MinMovementTime*
  commentId: Overload:Animal.Animal.MinMovementTime
  href: Animal.Animal.html#Animal_Animal_MinMovementTime
  name: MinMovementTime
  nameWithType: Animal.MinMovementTime
  fullName: Animal.Animal.MinMovementTime
- uid: Animal.Animal.LnpTime*
  commentId: Overload:Animal.Animal.LnpTime
  href: Animal.Animal.html#Animal_Animal_LnpTime
  name: LnpTime
  nameWithType: Animal.LnpTime
  fullName: Animal.Animal.LnpTime
- uid: Animal.Animal.BaseReward*
  commentId: Overload:Animal.Animal.BaseReward
  href: Animal.Animal.html#Animal_Animal_BaseReward
  name: BaseReward
  nameWithType: Animal.BaseReward
  fullName: Animal.Animal.BaseReward
- uid: Animal.Animal.Optogenetics*
  commentId: Overload:Animal.Animal.Optogenetics
  href: Animal.Animal.html#Animal_Animal_Optogenetics
  name: Optogenetics
  nameWithType: Animal.Optogenetics
  fullName: Animal.Animal.Optogenetics
- uid: Animal.Optogenetics
  commentId: T:Animal.Optogenetics
  parent: Animal
  href: Animal.Optogenetics.html
  name: Optogenetics
  nameWithType: Optogenetics
  fullName: Animal.Optogenetics
- uid: Animal.Animal.AutobiasCorrection*
  commentId: Overload:Animal.Animal.AutobiasCorrection
  href: Animal.Animal.html#Animal_Animal_AutobiasCorrection
  name: AutobiasCorrection
  nameWithType: Animal.AutobiasCorrection
  fullName: Animal.Animal.AutobiasCorrection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Animal.Animal.Process*
  commentId: Overload:Animal.Animal.Process
  href: Animal.Animal.html#Animal_Animal_Process
  name: Process
  nameWithType: Animal.Process
  fullName: Animal.Animal.Process
- uid: System.IObservable{Animal.Animal}
  commentId: T:System.IObservable{Animal.Animal}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<Animal>
  nameWithType: IObservable<Animal>
  fullName: System.IObservable<Animal.Animal>
  nameWithType.vb: IObservable(Of Animal)
  fullName.vb: System.IObservable(Of Animal.Animal)
  name.vb: IObservable(Of Animal)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - uid: Animal.Animal
    name: Animal
    href: Animal.Animal.html
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Animal.Animal
    name: Animal
    href: Animal.Animal.html
  - name: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IObservable{{TSource}}
  commentId: T:System.IObservable{``0}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<TSource>
  nameWithType: IObservable<TSource>
  fullName: System.IObservable<TSource>
  nameWithType.vb: IObservable(Of TSource)
  fullName.vb: System.IObservable(Of TSource)
  name.vb: IObservable(Of TSource)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: Animal.Animal.PrintMembers*
  commentId: Overload:Animal.Animal.PrintMembers
  href: Animal.Animal.html#Animal_Animal_PrintMembers_System_Text_StringBuilder_
  name: PrintMembers
  nameWithType: Animal.PrintMembers
  fullName: Animal.Animal.PrintMembers
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Animal.Animal.ToString*
  commentId: Overload:Animal.Animal.ToString
  href: Animal.Animal.html#Animal_Animal_ToString
  name: ToString
  nameWithType: Animal.ToString
  fullName: Animal.Animal.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
