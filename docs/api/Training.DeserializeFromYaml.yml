### YamlMime:ManagedReference
items:
- uid: Training.DeserializeFromYaml
  commentId: T:Training.DeserializeFromYaml
  id: DeserializeFromYaml
  parent: Training
  children:
  - Training.DeserializeFromYaml.#ctor
  - Training.DeserializeFromYaml.Build(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - Training.DeserializeFromYaml.Type
  langs:
  - csharp
  - vb
  name: DeserializeFromYaml
  nameWithType: DeserializeFromYaml
  fullName: Training.DeserializeFromYaml
  type: Class
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: io_files_rework
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: DeserializeFromYaml
    path: ../src/Extensions/Training.cs
    startLine: 1675
  assemblies:
  - Extensions
  namespace: Training
  summary: Deserializes a sequence of YAML strings into data model objects.
  example: []
  syntax:
    content: >-
      [WorkflowElementCategory(ElementCategory.Transform)]

      public class DeserializeFromYaml : SingleArgumentExpressionBuilder, IExpressionBuilder
    content.vb: >-
      <WorkflowElementCategory(ElementCategory.Transform)>

      Public Class DeserializeFromYaml Inherits SingleArgumentExpressionBuilder Implements IExpressionBuilder
  inheritance:
  - System.Object
  - Bonsai.Expressions.ExpressionBuilder
  - Bonsai.Expressions.SingleArgumentExpressionBuilder
  implements:
  - Bonsai.Expressions.IExpressionBuilder
  inheritedMembers:
  - Bonsai.Expressions.SingleArgumentExpressionBuilder.ArgumentRange
  - Bonsai.Expressions.ExpressionBuilder.ToString
  - Bonsai.Expressions.ExpressionBuilder.Unwrap(Bonsai.Expressions.ExpressionBuilder)
  - Bonsai.Expressions.ExpressionBuilder.GetWorkflowElement(Bonsai.Expressions.ExpressionBuilder)
  - Bonsai.Expressions.ExpressionBuilder.GetVisualizerElement(Bonsai.Expressions.ExpressionBuilder)
  - Bonsai.Expressions.ExpressionBuilder.GetVisualizerMappings(Bonsai.Expressions.ExpressionBuilder)
  - Bonsai.Expressions.ExpressionBuilder.FromWorkflowElement(System.Object,Bonsai.ElementCategory)
  - Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(System.Type)
  - Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(System.Object)
  - Bonsai.Expressions.ExpressionBuilder.SelectMembers(System.Linq.Expressions.Expression,System.String)
  - Bonsai.Expressions.ExpressionBuilder.GetArgumentAccess(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Bonsai.WorkflowElementCategoryAttribute
    ctor: Bonsai.WorkflowElementCategoryAttribute.#ctor(Bonsai.ElementCategory)
    arguments:
    - type: Bonsai.ElementCategory
      value: 2
- uid: Training.DeserializeFromYaml.#ctor
  commentId: M:Training.DeserializeFromYaml.#ctor
  id: '#ctor'
  parent: Training.DeserializeFromYaml
  langs:
  - csharp
  - vb
  name: DeserializeFromYaml()
  nameWithType: DeserializeFromYaml.DeserializeFromYaml()
  fullName: Training.DeserializeFromYaml.DeserializeFromYaml()
  type: Constructor
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: io_files_rework
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: .ctor
    path: ../src/Extensions/Training.cs
    startLine: 1694
  assemblies:
  - Extensions
  namespace: Training
  syntax:
    content: public DeserializeFromYaml()
    content.vb: Public Sub New()
  overload: Training.DeserializeFromYaml.#ctor*
  nameWithType.vb: DeserializeFromYaml.New()
  fullName.vb: Training.DeserializeFromYaml.New()
  name.vb: New()
- uid: Training.DeserializeFromYaml.Type
  commentId: P:Training.DeserializeFromYaml.Type
  id: Type
  parent: Training.DeserializeFromYaml
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: DeserializeFromYaml.Type
  fullName: Training.DeserializeFromYaml.Type
  type: Property
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: io_files_rework
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Type
    path: ../src/Extensions/Training.cs
    startLine: 1699
  assemblies:
  - Extensions
  namespace: Training
  syntax:
    content: public TypeMapping Type { get; set; }
    parameters: []
    return:
      type: Bonsai.Expressions.TypeMapping
    content.vb: Public Property Type As TypeMapping
  overload: Training.DeserializeFromYaml.Type*
- uid: Training.DeserializeFromYaml.Build(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  commentId: M:Training.DeserializeFromYaml.Build(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Build(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: Training.DeserializeFromYaml
  langs:
  - csharp
  - vb
  name: Build(IEnumerable<Expression>)
  nameWithType: DeserializeFromYaml.Build(IEnumerable<Expression>)
  fullName: Training.DeserializeFromYaml.Build(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote:
      path: src/Extensions/Training.cs
      branch: io_files_rework
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Build
    path: ../src/Extensions/Training.cs
    startLine: 1701
  assemblies:
  - Extensions
  namespace: Training
  summary: >-
    Constructs an <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref> node from a collection of input

    arguments. The result can be chained with other builders in a workflow.
  example: []
  syntax:
    content: public override Expression Build(IEnumerable<Expression> arguments)
    parameters:
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: >-
        A collection of <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref> nodes representing the input

        arguments.
    return:
      type: System.Linq.Expressions.Expression
      description: The constructed <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref> node.
    content.vb: Public Overrides Function Build(arguments As IEnumerable(Of Expression)) As Expression
  overridden: Bonsai.Expressions.ExpressionBuilder.Build(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  overload: Training.DeserializeFromYaml.Build*
  nameWithType.vb: DeserializeFromYaml.Build(IEnumerable(Of Expression))
  fullName.vb: Training.DeserializeFromYaml.Build(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Build(IEnumerable(Of Expression))
references:
- uid: Training
  commentId: N:Training
  href: Training.html
  name: Training
  nameWithType: Training
  fullName: Training
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Bonsai.Expressions.ExpressionBuilder
  commentId: T:Bonsai.Expressions.ExpressionBuilder
  parent: Bonsai.Expressions
  isExternal: true
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder
  fullName: Bonsai.Expressions.ExpressionBuilder
- uid: Bonsai.Expressions.SingleArgumentExpressionBuilder
  commentId: T:Bonsai.Expressions.SingleArgumentExpressionBuilder
  parent: Bonsai.Expressions
  isExternal: true
  name: SingleArgumentExpressionBuilder
  nameWithType: SingleArgumentExpressionBuilder
  fullName: Bonsai.Expressions.SingleArgumentExpressionBuilder
- uid: Bonsai.Expressions.IExpressionBuilder
  commentId: T:Bonsai.Expressions.IExpressionBuilder
  parent: Bonsai.Expressions
  isExternal: true
  name: IExpressionBuilder
  nameWithType: IExpressionBuilder
  fullName: Bonsai.Expressions.IExpressionBuilder
- uid: Bonsai.Expressions.SingleArgumentExpressionBuilder.ArgumentRange
  commentId: P:Bonsai.Expressions.SingleArgumentExpressionBuilder.ArgumentRange
  parent: Bonsai.Expressions.SingleArgumentExpressionBuilder
  isExternal: true
  name: ArgumentRange
  nameWithType: SingleArgumentExpressionBuilder.ArgumentRange
  fullName: Bonsai.Expressions.SingleArgumentExpressionBuilder.ArgumentRange
- uid: Bonsai.Expressions.ExpressionBuilder.ToString
  commentId: M:Bonsai.Expressions.ExpressionBuilder.ToString
  parent: Bonsai.Expressions.ExpressionBuilder
  isExternal: true
  name: ToString()
  nameWithType: ExpressionBuilder.ToString()
  fullName: Bonsai.Expressions.ExpressionBuilder.ToString()
  spec.csharp:
  - uid: Bonsai.Expressions.ExpressionBuilder.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Bonsai.Expressions.ExpressionBuilder.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: Bonsai.Expressions.ExpressionBuilder.Unwrap(Bonsai.Expressions.ExpressionBuilder)
  commentId: M:Bonsai.Expressions.ExpressionBuilder.Unwrap(Bonsai.Expressions.ExpressionBuilder)
  parent: Bonsai.Expressions.ExpressionBuilder
  isExternal: true
  name: Unwrap(ExpressionBuilder)
  nameWithType: ExpressionBuilder.Unwrap(ExpressionBuilder)
  fullName: Bonsai.Expressions.ExpressionBuilder.Unwrap(Bonsai.Expressions.ExpressionBuilder)
  spec.csharp:
  - uid: Bonsai.Expressions.ExpressionBuilder.Unwrap(Bonsai.Expressions.ExpressionBuilder)
    name: Unwrap
    isExternal: true
  - name: (
  - uid: Bonsai.Expressions.ExpressionBuilder
    name: ExpressionBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Bonsai.Expressions.ExpressionBuilder.Unwrap(Bonsai.Expressions.ExpressionBuilder)
    name: Unwrap
    isExternal: true
  - name: (
  - uid: Bonsai.Expressions.ExpressionBuilder
    name: ExpressionBuilder
    isExternal: true
  - name: )
- uid: Bonsai.Expressions.ExpressionBuilder.GetWorkflowElement(Bonsai.Expressions.ExpressionBuilder)
  commentId: M:Bonsai.Expressions.ExpressionBuilder.GetWorkflowElement(Bonsai.Expressions.ExpressionBuilder)
  parent: Bonsai.Expressions.ExpressionBuilder
  isExternal: true
  name: GetWorkflowElement(ExpressionBuilder)
  nameWithType: ExpressionBuilder.GetWorkflowElement(ExpressionBuilder)
  fullName: Bonsai.Expressions.ExpressionBuilder.GetWorkflowElement(Bonsai.Expressions.ExpressionBuilder)
  spec.csharp:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetWorkflowElement(Bonsai.Expressions.ExpressionBuilder)
    name: GetWorkflowElement
    isExternal: true
  - name: (
  - uid: Bonsai.Expressions.ExpressionBuilder
    name: ExpressionBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetWorkflowElement(Bonsai.Expressions.ExpressionBuilder)
    name: GetWorkflowElement
    isExternal: true
  - name: (
  - uid: Bonsai.Expressions.ExpressionBuilder
    name: ExpressionBuilder
    isExternal: true
  - name: )
- uid: Bonsai.Expressions.ExpressionBuilder.GetVisualizerElement(Bonsai.Expressions.ExpressionBuilder)
  commentId: M:Bonsai.Expressions.ExpressionBuilder.GetVisualizerElement(Bonsai.Expressions.ExpressionBuilder)
  parent: Bonsai.Expressions.ExpressionBuilder
  isExternal: true
  name: GetVisualizerElement(ExpressionBuilder)
  nameWithType: ExpressionBuilder.GetVisualizerElement(ExpressionBuilder)
  fullName: Bonsai.Expressions.ExpressionBuilder.GetVisualizerElement(Bonsai.Expressions.ExpressionBuilder)
  spec.csharp:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetVisualizerElement(Bonsai.Expressions.ExpressionBuilder)
    name: GetVisualizerElement
    isExternal: true
  - name: (
  - uid: Bonsai.Expressions.ExpressionBuilder
    name: ExpressionBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetVisualizerElement(Bonsai.Expressions.ExpressionBuilder)
    name: GetVisualizerElement
    isExternal: true
  - name: (
  - uid: Bonsai.Expressions.ExpressionBuilder
    name: ExpressionBuilder
    isExternal: true
  - name: )
- uid: Bonsai.Expressions.ExpressionBuilder.GetVisualizerMappings(Bonsai.Expressions.ExpressionBuilder)
  commentId: M:Bonsai.Expressions.ExpressionBuilder.GetVisualizerMappings(Bonsai.Expressions.ExpressionBuilder)
  parent: Bonsai.Expressions.ExpressionBuilder
  isExternal: true
  name: GetVisualizerMappings(ExpressionBuilder)
  nameWithType: ExpressionBuilder.GetVisualizerMappings(ExpressionBuilder)
  fullName: Bonsai.Expressions.ExpressionBuilder.GetVisualizerMappings(Bonsai.Expressions.ExpressionBuilder)
  spec.csharp:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetVisualizerMappings(Bonsai.Expressions.ExpressionBuilder)
    name: GetVisualizerMappings
    isExternal: true
  - name: (
  - uid: Bonsai.Expressions.ExpressionBuilder
    name: ExpressionBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetVisualizerMappings(Bonsai.Expressions.ExpressionBuilder)
    name: GetVisualizerMappings
    isExternal: true
  - name: (
  - uid: Bonsai.Expressions.ExpressionBuilder
    name: ExpressionBuilder
    isExternal: true
  - name: )
- uid: Bonsai.Expressions.ExpressionBuilder.FromWorkflowElement(System.Object,Bonsai.ElementCategory)
  commentId: M:Bonsai.Expressions.ExpressionBuilder.FromWorkflowElement(System.Object,Bonsai.ElementCategory)
  parent: Bonsai.Expressions.ExpressionBuilder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: FromWorkflowElement(object, ElementCategory)
  nameWithType: ExpressionBuilder.FromWorkflowElement(object, ElementCategory)
  fullName: Bonsai.Expressions.ExpressionBuilder.FromWorkflowElement(object, Bonsai.ElementCategory)
  nameWithType.vb: ExpressionBuilder.FromWorkflowElement(Object, ElementCategory)
  fullName.vb: Bonsai.Expressions.ExpressionBuilder.FromWorkflowElement(Object, Bonsai.ElementCategory)
  name.vb: FromWorkflowElement(Object, ElementCategory)
  spec.csharp:
  - uid: Bonsai.Expressions.ExpressionBuilder.FromWorkflowElement(System.Object,Bonsai.ElementCategory)
    name: FromWorkflowElement
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Bonsai.ElementCategory
    name: ElementCategory
    isExternal: true
  - name: )
  spec.vb:
  - uid: Bonsai.Expressions.ExpressionBuilder.FromWorkflowElement(System.Object,Bonsai.ElementCategory)
    name: FromWorkflowElement
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Bonsai.ElementCategory
    name: ElementCategory
    isExternal: true
  - name: )
- uid: Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(System.Type)
  commentId: M:Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(System.Type)
  parent: Bonsai.Expressions.ExpressionBuilder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetElementDisplayName(Type)
  nameWithType: ExpressionBuilder.GetElementDisplayName(Type)
  fullName: Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(System.Type)
  spec.csharp:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(System.Type)
    name: GetElementDisplayName
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(System.Type)
    name: GetElementDisplayName
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(System.Object)
  commentId: M:Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(System.Object)
  parent: Bonsai.Expressions.ExpressionBuilder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: GetElementDisplayName(object)
  nameWithType: ExpressionBuilder.GetElementDisplayName(object)
  fullName: Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(object)
  nameWithType.vb: ExpressionBuilder.GetElementDisplayName(Object)
  fullName.vb: Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(Object)
  name.vb: GetElementDisplayName(Object)
  spec.csharp:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(System.Object)
    name: GetElementDisplayName
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetElementDisplayName(System.Object)
    name: GetElementDisplayName
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Bonsai.Expressions.ExpressionBuilder.SelectMembers(System.Linq.Expressions.Expression,System.String)
  commentId: M:Bonsai.Expressions.ExpressionBuilder.SelectMembers(System.Linq.Expressions.Expression,System.String)
  parent: Bonsai.Expressions.ExpressionBuilder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  name: SelectMembers(Expression, string)
  nameWithType: ExpressionBuilder.SelectMembers(Expression, string)
  fullName: Bonsai.Expressions.ExpressionBuilder.SelectMembers(System.Linq.Expressions.Expression, string)
  nameWithType.vb: ExpressionBuilder.SelectMembers(Expression, String)
  fullName.vb: Bonsai.Expressions.ExpressionBuilder.SelectMembers(System.Linq.Expressions.Expression, String)
  name.vb: SelectMembers(Expression, String)
  spec.csharp:
  - uid: Bonsai.Expressions.ExpressionBuilder.SelectMembers(System.Linq.Expressions.Expression,System.String)
    name: SelectMembers
    isExternal: true
  - name: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Bonsai.Expressions.ExpressionBuilder.SelectMembers(System.Linq.Expressions.Expression,System.String)
    name: SelectMembers
    isExternal: true
  - name: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Bonsai.Expressions.ExpressionBuilder.GetArgumentAccess(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.String)
  commentId: M:Bonsai.Expressions.ExpressionBuilder.GetArgumentAccess(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.String)
  parent: Bonsai.Expressions.ExpressionBuilder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: GetArgumentAccess(IEnumerable<Expression>, string)
  nameWithType: ExpressionBuilder.GetArgumentAccess(IEnumerable<Expression>, string)
  fullName: Bonsai.Expressions.ExpressionBuilder.GetArgumentAccess(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, string)
  nameWithType.vb: ExpressionBuilder.GetArgumentAccess(IEnumerable(Of Expression), String)
  fullName.vb: Bonsai.Expressions.ExpressionBuilder.GetArgumentAccess(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), String)
  name.vb: GetArgumentAccess(IEnumerable(Of Expression), String)
  spec.csharp:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetArgumentAccess(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.String)
    name: GetArgumentAccess
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Bonsai.Expressions.ExpressionBuilder.GetArgumentAccess(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.String)
    name: GetArgumentAccess
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Bonsai.Expressions
  commentId: N:Bonsai.Expressions
  isExternal: true
  name: Bonsai.Expressions
  nameWithType: Bonsai.Expressions
  fullName: Bonsai.Expressions
  spec.csharp:
  - uid: Bonsai
    name: Bonsai
    isExternal: true
  - name: .
  - uid: Bonsai.Expressions
    name: Expressions
    isExternal: true
  spec.vb:
  - uid: Bonsai
    name: Bonsai
    isExternal: true
  - name: .
  - uid: Bonsai.Expressions
    name: Expressions
    isExternal: true
- uid: Training.DeserializeFromYaml.#ctor*
  commentId: Overload:Training.DeserializeFromYaml.#ctor
  href: Training.DeserializeFromYaml.html#Training_DeserializeFromYaml__ctor
  name: DeserializeFromYaml
  nameWithType: DeserializeFromYaml.DeserializeFromYaml
  fullName: Training.DeserializeFromYaml.DeserializeFromYaml
  nameWithType.vb: DeserializeFromYaml.New
  fullName.vb: Training.DeserializeFromYaml.New
  name.vb: New
- uid: Training.DeserializeFromYaml.Type*
  commentId: Overload:Training.DeserializeFromYaml.Type
  href: Training.DeserializeFromYaml.html#Training_DeserializeFromYaml_Type
  name: Type
  nameWithType: DeserializeFromYaml.Type
  fullName: Training.DeserializeFromYaml.Type
- uid: Bonsai.Expressions.TypeMapping
  commentId: T:Bonsai.Expressions.TypeMapping
  parent: Bonsai.Expressions
  isExternal: true
  name: TypeMapping
  nameWithType: TypeMapping
  fullName: Bonsai.Expressions.TypeMapping
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: Bonsai.Expressions.ExpressionBuilder.Build(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  commentId: M:Bonsai.Expressions.ExpressionBuilder.Build(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: Bonsai.Expressions.ExpressionBuilder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: Build(IEnumerable<Expression>)
  nameWithType: ExpressionBuilder.Build(IEnumerable<Expression>)
  fullName: Bonsai.Expressions.ExpressionBuilder.Build(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  nameWithType.vb: ExpressionBuilder.Build(IEnumerable(Of Expression))
  fullName.vb: Bonsai.Expressions.ExpressionBuilder.Build(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Build(IEnumerable(Of Expression))
  spec.csharp:
  - uid: Bonsai.Expressions.ExpressionBuilder.Build(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Build
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: '>'
  - name: )
  spec.vb:
  - uid: Bonsai.Expressions.ExpressionBuilder.Build(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Build
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: )
  - name: )
- uid: Training.DeserializeFromYaml.Build*
  commentId: Overload:Training.DeserializeFromYaml.Build
  href: Training.DeserializeFromYaml.html#Training_DeserializeFromYaml_Build_System_Collections_Generic_IEnumerable_System_Linq_Expressions_Expression__
  name: Build
  nameWithType: DeserializeFromYaml.Build
  fullName: Training.DeserializeFromYaml.Build
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  commentId: T:System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
  nameWithType.vb: IEnumerable(Of Expression)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression)
  name.vb: IEnumerable(Of Expression)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
