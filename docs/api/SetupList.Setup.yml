### YamlMime:ManagedReference
items:
- uid: SetupList.Setup
  commentId: T:SetupList.Setup
  id: Setup
  parent: SetupList
  children:
  - SetupList.Setup.#ctor
  - SetupList.Setup.#ctor(SetupList.Setup)
  - SetupList.Setup.CenterPoke
  - SetupList.Setup.LeftPoke
  - SetupList.Setup.Lights
  - SetupList.Setup.PrintMembers(System.Text.StringBuilder)
  - SetupList.Setup.Process
  - SetupList.Setup.Process``1(System.IObservable{``0})
  - SetupList.Setup.RightPoke
  - SetupList.Setup.SetupId
  - SetupList.Setup.Sounds
  - SetupList.Setup.Speakers
  - SetupList.Setup.SyringePumps
  - SetupList.Setup.ToString
  - SetupList.Setup.UseCamera
  langs:
  - csharp
  - vb
  name: Setup
  nameWithType: Setup
  fullName: SetupList.Setup
  type: Class
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Setup
    path: ../src/Extensions/SetupList.cs
    startLine: 302
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: >-
      [Combinator]

      [WorkflowElementCategory(ElementCategory.Source)]

      public class Setup
    content.vb: >-
      <Combinator>

      <WorkflowElementCategory(ElementCategory.Source)>

      Public Class Setup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Bonsai.CombinatorAttribute
    ctor: Bonsai.CombinatorAttribute.#ctor
    arguments: []
  - type: Bonsai.WorkflowElementCategoryAttribute
    ctor: Bonsai.WorkflowElementCategoryAttribute.#ctor(Bonsai.ElementCategory)
    arguments:
    - type: Bonsai.ElementCategory
      value: 0
- uid: SetupList.Setup.#ctor
  commentId: M:SetupList.Setup.#ctor
  id: '#ctor'
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: Setup.Setup()
  fullName: SetupList.Setup.Setup()
  type: Constructor
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: .ctor
    path: ../src/Extensions/SetupList.cs
    startLine: 326
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: public Setup()
    content.vb: Public Sub New()
  overload: SetupList.Setup.#ctor*
  nameWithType.vb: Setup.New()
  fullName.vb: SetupList.Setup.New()
  name.vb: New()
- uid: SetupList.Setup.#ctor(SetupList.Setup)
  commentId: M:SetupList.Setup.#ctor(SetupList.Setup)
  id: '#ctor(SetupList.Setup)'
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: Setup(Setup)
  nameWithType: Setup.Setup(Setup)
  fullName: SetupList.Setup.Setup(SetupList.Setup)
  type: Constructor
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: .ctor
    path: ../src/Extensions/SetupList.cs
    startLine: 330
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: protected Setup(Setup other)
    parameters:
    - id: other
      type: SetupList.Setup
    content.vb: Protected Sub New(other As Setup)
  overload: SetupList.Setup.#ctor*
  nameWithType.vb: Setup.New(Setup)
  fullName.vb: SetupList.Setup.New(SetupList.Setup)
  name.vb: New(Setup)
- uid: SetupList.Setup.SetupId
  commentId: P:SetupList.Setup.SetupId
  id: SetupId
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: SetupId
  nameWithType: Setup.SetupId
  fullName: SetupList.Setup.SetupId
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: SetupId
    path: ../src/Extensions/SetupList.cs
    startLine: 346
  assemblies:
  - Extensions
  namespace: SetupList
  summary: The ID number of the setup.
  example: []
  syntax:
    content: >-
      [JsonProperty("setup_id", Required = Required.Always)]

      [YamlMember(Alias = "setup_id")]

      public int SetupId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("setup_id", Required:=Required.Always)>

      <YamlMember(Alias:="setup_id")>

      Public Property SetupId As Integer
  overload: SetupList.Setup.SetupId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: setup_id
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: setup_id
- uid: SetupList.Setup.LeftPoke
  commentId: P:SetupList.Setup.LeftPoke
  id: LeftPoke
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: LeftPoke
  nameWithType: Setup.LeftPoke
  fullName: SetupList.Setup.LeftPoke
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: LeftPoke
    path: ../src/Extensions/SetupList.cs
    startLine: 364
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Contains parameters related to the left poke.
  example: []
  syntax:
    content: >-
      [JsonProperty("left_poke", Required = Required.Always)]

      [YamlMember(Alias = "left_poke")]

      public Poke LeftPoke { get; set; }
    parameters: []
    return:
      type: SetupList.Poke
    content.vb: >-
      <JsonProperty("left_poke", Required:=Required.Always)>

      <YamlMember(Alias:="left_poke")>

      Public Property LeftPoke As Poke
  overload: SetupList.Setup.LeftPoke*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: left_poke
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: left_poke
- uid: SetupList.Setup.CenterPoke
  commentId: P:SetupList.Setup.CenterPoke
  id: CenterPoke
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: CenterPoke
  nameWithType: Setup.CenterPoke
  fullName: SetupList.Setup.CenterPoke
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: CenterPoke
    path: ../src/Extensions/SetupList.cs
    startLine: 383
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Contains parameters related to the center poke.
  example: []
  syntax:
    content: >-
      [JsonProperty("center_poke", Required = Required.Always)]

      [YamlMember(Alias = "center_poke")]

      public Poke CenterPoke { get; set; }
    parameters: []
    return:
      type: SetupList.Poke
    content.vb: >-
      <JsonProperty("center_poke", Required:=Required.Always)>

      <YamlMember(Alias:="center_poke")>

      Public Property CenterPoke As Poke
  overload: SetupList.Setup.CenterPoke*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: center_poke
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: center_poke
- uid: SetupList.Setup.RightPoke
  commentId: P:SetupList.Setup.RightPoke
  id: RightPoke
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: RightPoke
  nameWithType: Setup.RightPoke
  fullName: SetupList.Setup.RightPoke
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: RightPoke
    path: ../src/Extensions/SetupList.cs
    startLine: 402
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Contains parameters related to the right poke.
  example: []
  syntax:
    content: >-
      [JsonProperty("right_poke", Required = Required.Always)]

      [YamlMember(Alias = "right_poke")]

      public Poke RightPoke { get; set; }
    parameters: []
    return:
      type: SetupList.Poke
    content.vb: >-
      <JsonProperty("right_poke", Required:=Required.Always)>

      <YamlMember(Alias:="right_poke")>

      Public Property RightPoke As Poke
  overload: SetupList.Setup.RightPoke*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: right_poke
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: right_poke
- uid: SetupList.Setup.Speakers
  commentId: P:SetupList.Setup.Speakers
  id: Speakers
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: Speakers
  nameWithType: Setup.Speakers
  fullName: SetupList.Setup.Speakers
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Speakers
    path: ../src/Extensions/SetupList.cs
    startLine: 421
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Contains parameters related to the speakers.
  example: []
  syntax:
    content: >-
      [JsonProperty("speakers", Required = Required.Always)]

      [YamlMember(Alias = "speakers")]

      public Speakers Speakers { get; set; }
    parameters: []
    return:
      type: SetupList.Speakers
    content.vb: >-
      <JsonProperty("speakers", Required:=Required.Always)>

      <YamlMember(Alias:="speakers")>

      Public Property Speakers As Speakers
  overload: SetupList.Setup.Speakers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: speakers
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: speakers
- uid: SetupList.Setup.Lights
  commentId: P:SetupList.Setup.Lights
  id: Lights
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: Lights
  nameWithType: Setup.Lights
  fullName: SetupList.Setup.Lights
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Lights
    path: ../src/Extensions/SetupList.cs
    startLine: 440
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Contains parameters related to the box and poke LEDs.
  example: []
  syntax:
    content: >-
      [JsonProperty("lights", Required = Required.Always)]

      [YamlMember(Alias = "lights")]

      public Lights Lights { get; set; }
    parameters: []
    return:
      type: SetupList.Lights
    content.vb: >-
      <JsonProperty("lights", Required:=Required.Always)>

      <YamlMember(Alias:="lights")>

      Public Property Lights As Lights
  overload: SetupList.Setup.Lights*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lights
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: lights
- uid: SetupList.Setup.SyringePumps
  commentId: P:SetupList.Setup.SyringePumps
  id: SyringePumps
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: SyringePumps
  nameWithType: Setup.SyringePumps
  fullName: SetupList.Setup.SyringePumps
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: SyringePumps
    path: ../src/Extensions/SetupList.cs
    startLine: 459
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Contains the parameters related to the SyringePumps.
  example: []
  syntax:
    content: >-
      [JsonProperty("syringe_pumps", Required = Required.Always)]

      [YamlMember(Alias = "syringe_pumps")]

      public SyringePumps SyringePumps { get; set; }
    parameters: []
    return:
      type: SetupList.SyringePumps
    content.vb: >-
      <JsonProperty("syringe_pumps", Required:=Required.Always)>

      <YamlMember(Alias:="syringe_pumps")>

      Public Property SyringePumps As SyringePumps
  overload: SetupList.Setup.SyringePumps*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: syringe_pumps
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: syringe_pumps
- uid: SetupList.Setup.Sounds
  commentId: P:SetupList.Setup.Sounds
  id: Sounds
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: Sounds
  nameWithType: Setup.Sounds
  fullName: SetupList.Setup.Sounds
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Sounds
    path: ../src/Extensions/SetupList.cs
    startLine: 478
  assemblies:
  - Extensions
  namespace: SetupList
  summary: The list with information regarding the sounds uploaded to the Harp SoundCard.
  example: []
  syntax:
    content: >-
      [JsonProperty("sounds", Required = Required.Always)]

      [YamlMember(Alias = "sounds")]

      public List<Sound> Sounds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SetupList.Sound}
    content.vb: >-
      <JsonProperty("sounds", Required:=Required.Always)>

      <YamlMember(Alias:="sounds")>

      Public Property Sounds As List(Of Sound)
  overload: SetupList.Setup.Sounds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sounds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: sounds
- uid: SetupList.Setup.UseCamera
  commentId: P:SetupList.Setup.UseCamera
  id: UseCamera
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: UseCamera
  nameWithType: Setup.UseCamera
  fullName: SetupList.Setup.UseCamera
  type: Property
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: UseCamera
    path: ../src/Extensions/SetupList.cs
    startLine: 497
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Indicates whether the setup has a camera (true) or not (false).
  example: []
  syntax:
    content: >-
      [JsonProperty("use_camera", Required = Required.Always)]

      [YamlMember(Alias = "use_camera")]

      public bool UseCamera { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("use_camera", Required:=Required.Always)>

      <YamlMember(Alias:="use_camera")>

      Public Property UseCamera As Boolean
  overload: SetupList.Setup.UseCamera*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: use_camera
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Alias
      type: System.String
      value: use_camera
- uid: SetupList.Setup.Process
  commentId: M:SetupList.Setup.Process
  id: Process
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: Process()
  nameWithType: Setup.Process()
  fullName: SetupList.Setup.Process()
  type: Method
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Process
    path: ../src/Extensions/SetupList.cs
    startLine: 512
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: public IObservable<Setup> Process()
    return:
      type: System.IObservable{SetupList.Setup}
    content.vb: Public Function Process() As IObservable(Of Setup)
  overload: SetupList.Setup.Process*
- uid: SetupList.Setup.Process``1(System.IObservable{``0})
  commentId: M:SetupList.Setup.Process``1(System.IObservable{``0})
  id: Process``1(System.IObservable{``0})
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: Process<TSource>(IObservable<TSource>)
  nameWithType: Setup.Process<TSource>(IObservable<TSource>)
  fullName: SetupList.Setup.Process<TSource>(System.IObservable<TSource>)
  type: Method
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: Process
    path: ../src/Extensions/SetupList.cs
    startLine: 517
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: public IObservable<Setup> Process<TSource>(IObservable<TSource> source)
    parameters:
    - id: source
      type: System.IObservable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.IObservable{SetupList.Setup}
    content.vb: Public Function Process(Of TSource)(source As IObservable(Of TSource)) As IObservable(Of Setup)
  overload: SetupList.Setup.Process*
  nameWithType.vb: Setup.Process(Of TSource)(IObservable(Of TSource))
  fullName.vb: SetupList.Setup.Process(Of TSource)(System.IObservable(Of TSource))
  name.vb: Process(Of TSource)(IObservable(Of TSource))
- uid: SetupList.Setup.PrintMembers(System.Text.StringBuilder)
  commentId: M:SetupList.Setup.PrintMembers(System.Text.StringBuilder)
  id: PrintMembers(System.Text.StringBuilder)
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: PrintMembers(StringBuilder)
  nameWithType: Setup.PrintMembers(StringBuilder)
  fullName: SetupList.Setup.PrintMembers(System.Text.StringBuilder)
  type: Method
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: PrintMembers
    path: ../src/Extensions/SetupList.cs
    startLine: 522
  assemblies:
  - Extensions
  namespace: SetupList
  syntax:
    content: protected virtual bool PrintMembers(StringBuilder stringBuilder)
    parameters:
    - id: stringBuilder
      type: System.Text.StringBuilder
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function PrintMembers(stringBuilder As StringBuilder) As Boolean
  overload: SetupList.Setup.PrintMembers*
- uid: SetupList.Setup.ToString
  commentId: M:SetupList.Setup.ToString
  id: ToString
  parent: SetupList.Setup
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Setup.ToString()
  fullName: SetupList.Setup.ToString()
  type: Method
  source:
    remote:
      path: src/Extensions/SetupList.cs
      branch: python_reorganization
      repo: git@github.com:fchampalimaud/CDC.SoundLateralizationTask.git
    id: ToString
    path: ../src/Extensions/SetupList.cs
    startLine: 536
  assemblies:
  - Extensions
  namespace: SetupList
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SetupList.Setup.ToString*
references:
- uid: SetupList
  commentId: N:SetupList
  href: SetupList.html
  name: SetupList
  nameWithType: SetupList
  fullName: SetupList
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SetupList.Setup.#ctor*
  commentId: Overload:SetupList.Setup.#ctor
  href: SetupList.Setup.html#SetupList_Setup__ctor
  name: Setup
  nameWithType: Setup.Setup
  fullName: SetupList.Setup.Setup
  nameWithType.vb: Setup.New
  fullName.vb: SetupList.Setup.New
  name.vb: New
- uid: SetupList.Setup
  commentId: T:SetupList.Setup
  parent: SetupList
  href: SetupList.Setup.html
  name: Setup
  nameWithType: Setup
  fullName: SetupList.Setup
- uid: SetupList.Setup.SetupId*
  commentId: Overload:SetupList.Setup.SetupId
  href: SetupList.Setup.html#SetupList_Setup_SetupId
  name: SetupId
  nameWithType: Setup.SetupId
  fullName: SetupList.Setup.SetupId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SetupList.Setup.LeftPoke*
  commentId: Overload:SetupList.Setup.LeftPoke
  href: SetupList.Setup.html#SetupList_Setup_LeftPoke
  name: LeftPoke
  nameWithType: Setup.LeftPoke
  fullName: SetupList.Setup.LeftPoke
- uid: SetupList.Poke
  commentId: T:SetupList.Poke
  parent: SetupList
  href: SetupList.Poke.html
  name: Poke
  nameWithType: Poke
  fullName: SetupList.Poke
- uid: SetupList.Setup.CenterPoke*
  commentId: Overload:SetupList.Setup.CenterPoke
  href: SetupList.Setup.html#SetupList_Setup_CenterPoke
  name: CenterPoke
  nameWithType: Setup.CenterPoke
  fullName: SetupList.Setup.CenterPoke
- uid: SetupList.Setup.RightPoke*
  commentId: Overload:SetupList.Setup.RightPoke
  href: SetupList.Setup.html#SetupList_Setup_RightPoke
  name: RightPoke
  nameWithType: Setup.RightPoke
  fullName: SetupList.Setup.RightPoke
- uid: SetupList.Setup.Speakers*
  commentId: Overload:SetupList.Setup.Speakers
  href: SetupList.Setup.html#SetupList_Setup_Speakers
  name: Speakers
  nameWithType: Setup.Speakers
  fullName: SetupList.Setup.Speakers
- uid: SetupList.Speakers
  commentId: T:SetupList.Speakers
  parent: SetupList
  href: SetupList.Speakers.html
  name: Speakers
  nameWithType: Speakers
  fullName: SetupList.Speakers
- uid: SetupList.Setup.Lights*
  commentId: Overload:SetupList.Setup.Lights
  href: SetupList.Setup.html#SetupList_Setup_Lights
  name: Lights
  nameWithType: Setup.Lights
  fullName: SetupList.Setup.Lights
- uid: SetupList.Lights
  commentId: T:SetupList.Lights
  parent: SetupList
  href: SetupList.Lights.html
  name: Lights
  nameWithType: Lights
  fullName: SetupList.Lights
- uid: SetupList.Setup.SyringePumps*
  commentId: Overload:SetupList.Setup.SyringePumps
  href: SetupList.Setup.html#SetupList_Setup_SyringePumps
  name: SyringePumps
  nameWithType: Setup.SyringePumps
  fullName: SetupList.Setup.SyringePumps
- uid: SetupList.SyringePumps
  commentId: T:SetupList.SyringePumps
  parent: SetupList
  href: SetupList.SyringePumps.html
  name: SyringePumps
  nameWithType: SyringePumps
  fullName: SetupList.SyringePumps
- uid: SetupList.Setup.Sounds*
  commentId: Overload:SetupList.Setup.Sounds
  href: SetupList.Setup.html#SetupList_Setup_Sounds
  name: Sounds
  nameWithType: Setup.Sounds
  fullName: SetupList.Setup.Sounds
- uid: System.Collections.Generic.List{SetupList.Sound}
  commentId: T:System.Collections.Generic.List{SetupList.Sound}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Sound>
  nameWithType: List<Sound>
  fullName: System.Collections.Generic.List<SetupList.Sound>
  nameWithType.vb: List(Of Sound)
  fullName.vb: System.Collections.Generic.List(Of SetupList.Sound)
  name.vb: List(Of Sound)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SetupList.Sound
    name: Sound
    href: SetupList.Sound.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SetupList.Sound
    name: Sound
    href: SetupList.Sound.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SetupList.Setup.UseCamera*
  commentId: Overload:SetupList.Setup.UseCamera
  href: SetupList.Setup.html#SetupList_Setup_UseCamera
  name: UseCamera
  nameWithType: Setup.UseCamera
  fullName: SetupList.Setup.UseCamera
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SetupList.Setup.Process*
  commentId: Overload:SetupList.Setup.Process
  href: SetupList.Setup.html#SetupList_Setup_Process
  name: Process
  nameWithType: Setup.Process
  fullName: SetupList.Setup.Process
- uid: System.IObservable{SetupList.Setup}
  commentId: T:System.IObservable{SetupList.Setup}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<Setup>
  nameWithType: IObservable<Setup>
  fullName: System.IObservable<SetupList.Setup>
  nameWithType.vb: IObservable(Of Setup)
  fullName.vb: System.IObservable(Of SetupList.Setup)
  name.vb: IObservable(Of Setup)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - uid: SetupList.Setup
    name: Setup
    href: SetupList.Setup.html
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SetupList.Setup
    name: Setup
    href: SetupList.Setup.html
  - name: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IObservable{{TSource}}
  commentId: T:System.IObservable{``0}
  parent: System
  definition: System.IObservable`1
  href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  name: IObservable<TSource>
  nameWithType: IObservable<TSource>
  fullName: System.IObservable<TSource>
  nameWithType.vb: IObservable(Of TSource)
  fullName.vb: System.IObservable(Of TSource)
  name.vb: IObservable(Of TSource)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iobservable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: SetupList.Setup.PrintMembers*
  commentId: Overload:SetupList.Setup.PrintMembers
  href: SetupList.Setup.html#SetupList_Setup_PrintMembers_System_Text_StringBuilder_
  name: PrintMembers
  nameWithType: Setup.PrintMembers
  fullName: SetupList.Setup.PrintMembers
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SetupList.Setup.ToString*
  commentId: Overload:SetupList.Setup.ToString
  href: SetupList.Setup.html#SetupList_Setup_ToString
  name: ToString
  nameWithType: Setup.ToString
  fullName: SetupList.Setup.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
