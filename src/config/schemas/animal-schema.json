{
  "definitions": {
    "AutobiasCorrection": {
      "properties": {
        "use_correction": {
          "description": "Indicates whether the autobias correction feature should be used or not.",
          "title": "Use Correction",
          "type": "boolean"
        },
        "window": {
          "description": "The amount of trials to consider to calculate the animal bias.",
          "exclusiveMinimum": 0,
          "title": "Window",
          "type": "integer"
        },
        "cutoff_bias": {
          "description": "The minimum |bias| value from which the side rewards start to be corrected.",
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Cutoff Bias",
          "type": "number"
        },
        "performance_threshold": {
          "description": "The minimum performance value for which the side rewards are not corrected.",
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Performance Threshold",
          "type": "number"
        },
        "slope_multiplier": {
          "description": "A multiplying factor to the slope of the increasing reward amount side (corresponds to the non-biased side).",
          "exclusiveMinimum": 0.0,
          "title": "Slope Multiplier",
          "type": "number"
        }
      },
      "required": [
        "use_correction",
        "window",
        "cutoff_bias",
        "performance_threshold",
        "slope_multiplier"
      ],
      "title": "AutobiasCorrection",
      "type": "object"
    },
    "FixationTime": {
      "properties": {
        "opto_onset_time": {
          "$ref": "#/definitions/TimeConstrains",
          "description": "Contains parameters related to the Optogenetics Onset Time part of the Fixation Time. The units of each of the parameters is milliseconds."
        },
        "sound_onset_time": {
          "$ref": "#/definitions/TimeConstrains",
          "description": "Contains parameters related to the Sound Onset Time part of the Fixation Time. The units of each of the parameters is milliseconds."
        }
      },
      "required": [
        "opto_onset_time",
        "sound_onset_time"
      ],
      "title": "FixationTime",
      "type": "object"
    },
    "OptoLED": {
      "properties": {
        "voltage": {
          "description": "The voltage to use in the TTL signal.",
          "maximum": 5000.0,
          "minimum": 0.0,
          "title": "Voltage",
          "type": "number"
        },
        "power": {
          "description": "The power with which the animal is stimulated.",
          "minimum": 0.0,
          "title": "Power",
          "type": "number"
        },
        "mode": {
          "description": "Indicates whether the LED port is being used to control an external LED via TTL or if it's controlling a LED directly with the current sources.",
          "enum": [
            "TTL",
            "Current"
          ],
          "title": "Mode",
          "type": "string"
        },
        "use_pulses": {
          "description": "Indicates whether the optogenetics protocol uses pulses of light (true) or a continuous emission (false).",
          "title": "Use Pulses",
          "type": "boolean"
        },
        "frequency": {
          "description": "The frequency of the pulses (Hz). It only works when use_pulses is true.",
          "maximum": 255,
          "minimum": 1,
          "title": "Frequency",
          "type": "integer"
        },
        "duty_cycle": {
          "description": "The duty cycle of the pulses (%). It only works when use_pulses is true.",
          "maximum": 100,
          "minimum": 0,
          "title": "Duty Cycle",
          "type": "integer"
        }
      },
      "required": [
        "voltage",
        "power",
        "mode",
        "use_pulses",
        "frequency",
        "duty_cycle"
      ],
      "title": "OptoLED",
      "type": "object"
    },
    "Optogenetics": {
      "properties": {
        "use_opto": {
          "description": "Indicates whether optogenetics is used or not.",
          "title": "Use Opto",
          "type": "boolean"
        },
        "mode": {
          "description": "Indicates the optogenetics mode used in the current session.",
          "enum": [
            "Left",
            "Right",
            "Bilateral"
          ],
          "title": "Mode",
          "type": "string"
        },
        "duration": {
          "description": "The duration of the optogenetics stimulation/inhibition protocol (s).",
          "minimum": 0.0,
          "title": "Duration",
          "type": "number"
        },
        "opto_ratio": {
          "description": "The ratio of optogenetics trials.",
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Opto Ratio",
          "type": "number"
        },
        "use_rt": {
          "description": "Indicates whether the optogenetics stimulation/inhibition should stop when the animal leaves the poke (true) or not (false).",
          "title": "Use Rt",
          "type": "boolean"
        },
        "ramp_mode": {
          "description": "Indicates the ramp mode used in the optogenetics protocol. It only works if the LED is not configured to use pulses.",
          "enum": [
            "None",
            "Rise",
            "Fall",
            "Both"
          ],
          "title": "Ramp Mode",
          "type": "string"
        },
        "ramp_time": {
          "description": "The duration of the ramp of the optogenetics protocol (ms). It only works when use_pulses is false.",
          "minimum": 1,
          "title": "Ramp Time",
          "type": "integer"
        },
        "led0": {
          "$ref": "#/definitions/OptoLED",
          "description": "The optogenetics protocol that LED 0 executes."
        },
        "led1": {
          "$ref": "#/definitions/OptoLED",
          "description": "The optogenetics protocol that LED 1 executes."
        }
      },
      "required": [
        "use_opto",
        "mode",
        "duration",
        "opto_ratio",
        "use_rt",
        "ramp_mode",
        "ramp_time",
        "led0",
        "led1"
      ],
      "title": "Optogenetics",
      "type": "object"
    },
    "Session": {
      "properties": {
        "number": {
          "description": "The number of the current session.",
          "exclusiveMinimum": 0,
          "title": "Number",
          "type": "integer"
        },
        "experimenter": {
          "description": "The person who trained the animal in the current session.",
          "title": "Experimenter",
          "type": "string"
        },
        "duration": {
          "description": "The duration of the session (in the hh:mm:ss format).",
          "format": "duration",
          "title": "Duration",
          "type": "string"
        },
        "type": {
          "description": "The number of the session type.",
          "title": "Type",
          "type": "integer"
        },
        "box": {
          "description": "The ID number of the setup where the animal will perform the session.",
          "minimum": 0,
          "title": "Box",
          "type": "integer"
        },
        "starting_trial_number": {
          "description": "The number of the first trial of the session.",
          "minimum": 1,
          "title": "Starting Trial Number",
          "type": "integer"
        },
        "starting_block_number": {
          "description": "The number of the first block of the session.",
          "minimum": 1,
          "title": "Starting Block Number",
          "type": "integer"
        },
        "starting_training_level": {
          "description": "The training level the animal will start in the current session.",
          "minimum": 1,
          "title": "Starting Training Level",
          "type": "integer"
        },
        "last_training_level": {
          "description": "The last training level the animal is allowed to progress to in the current session.",
          "minimum": 1,
          "title": "Last Training Level",
          "type": "integer"
        }
      },
      "required": [
        "number",
        "experimenter",
        "duration",
        "type",
        "box",
        "starting_trial_number",
        "starting_block_number",
        "starting_training_level",
        "last_training_level"
      ],
      "title": "Session",
      "type": "object"
    },
    "Sound": {
      "properties": {
        "fixed_abl": {
          "description": "The ABL value to use when use_fixed_abl from the training.json file is true (dB).",
          "minimum": 0.0,
          "title": "Fixed Abl",
          "type": "number"
        },
        "abl_list": {
          "description": "The list of ABL values to be used in the task (dB SPL).",
          "items": {
            "type": "number"
          },
          "title": "Abl List",
          "type": "array"
        },
        "pseudo_random_side": {
          "description": "Indicates whether the correct side is picked pseudo-randomly (true) or randomly (false). If it's picked pseudo-randomly, a shuffled array with equal amounts of -1's (left) and 1's (right) of size 2 * `max_side` is created and it's cycled through - a new shuffled array is generated when the end of the array is reached.",
          "title": "Pseudo Random Side",
          "type": "boolean"
        },
        "max_side": {
          "description": "The maximum amount of elements representing the left or right side in the pseudo-random array for when the side is picked pseudo-randomly.",
          "exclusiveMinimum": 0,
          "title": "Max Side",
          "type": "integer"
        }
      },
      "required": [
        "fixed_abl",
        "abl_list",
        "pseudo_random_side",
        "max_side"
      ],
      "title": "Sound",
      "type": "object"
    },
    "TimeConstrains": {
      "properties": {
        "min_value": {
          "description": "The initial base value.",
          "minimum": 0.0,
          "title": "Min Value",
          "type": "number"
        },
        "delta": {
          "description": "The increment to the base value every trial a certain condition is met until the target value is reached.",
          "minimum": 0.0,
          "title": "Delta",
          "type": "number"
        },
        "target": {
          "description": "The target value.",
          "minimum": 0.0,
          "title": "Target",
          "type": "number"
        }
      },
      "required": [
        "min_value",
        "delta",
        "target"
      ],
      "title": "TimeConstrains",
      "type": "object"
    }
  },
  "properties": {
    "animal_id": {
      "description": "The ID of the animal.",
      "pattern": "^[A-Z]{2,6}\\d{4}$",
      "title": "Animal Id",
      "type": "string"
    },
    "batch": {
      "description": "The batch to which the current animal belongs to.",
      "pattern": "^[a-zA-Z0-9_\\-\\.]+$",
      "title": "Batch",
      "type": "string"
    },
    "session": {
      "$ref": "#/definitions/Session",
      "description": "Contains the session-related parameters."
    },
    "sound": {
      "$ref": "#/definitions/Sound",
      "description": "Contains the sound-related parameters."
    },
    "fixation_time": {
      "$ref": "#/definitions/FixationTime",
      "description": "Contains parameters related to the fixation time."
    },
    "reaction_time": {
      "$ref": "#/definitions/TimeConstrains",
      "description": "Contains parameters related to the reaction time. The units of each of the parameters is seconds."
    },
    "max_reaction_time": {
      "description": "The maximum allowed reaction time (s).",
      "minimum": 0.0,
      "title": "Max Reaction Time",
      "type": "number"
    },
    "min_movement_time": {
      "description": "The minimum allowed movement time (s).",
      "minimum": 0.0,
      "title": "Min Movement Time",
      "type": "number"
    },
    "lnp_time": {
      "$ref": "#/definitions/TimeConstrains",
      "description": "Contains parameters related to the LNP (Lateral Nose Poke) time. The units of each of the parameters is seconds."
    },
    "base_reward": {
      "description": "The amount of reward delivered to the animal (uL).",
      "exclusiveMinimum": 0.0,
      "title": "Base Reward",
      "type": "number"
    },
    "optogenetics": {
      "$ref": "#/definitions/Optogenetics",
      "description": "Contains the optogenetics-related parameters."
    },
    "autobias_correction": {
      "$ref": "#/definitions/AutobiasCorrection",
      "description": "Contains parameters related to the autobias correction algorithm."
    }
  },
  "required": [
    "animal_id",
    "batch",
    "session",
    "sound",
    "fixation_time",
    "reaction_time",
    "max_reaction_time",
    "min_movement_time",
    "lnp_time",
    "base_reward",
    "optogenetics",
    "autobias_correction"
  ],
  "title": "Animal",
  "type": "object"
}